{
  "openapi": "3.0.1",
  "info": {
    "title": "Jellyfin API",
    "version": "10.8.13",
    "x-jellyfin-version": "10.8.13"
  },
  "servers": [
    {
      "url": "http://localhost"
    }
  ],
  "paths": {},
  "components": {
    "schemas": {
      "AccessSchedule": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Gets the id of this instance.",
            "format": "int32",
            "readOnly": true
          },
          "UserId": {
            "type": "string",
            "description": "Gets the id of the associated user.",
            "format": "uuid"
          },
          "DayOfWeek": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DynamicDayOfWeek"
              }
            ],
            "description": "Gets or sets the day of week."
          },
          "StartHour": {
            "type": "number",
            "description": "Gets or sets the start hour.",
            "format": "double"
          },
          "EndHour": {
            "type": "number",
            "description": "Gets or sets the end hour.",
            "format": "double"
          }
        },
        "additionalProperties": true,
        "description": "An entity representing a user's access schedule."
      },
      "ActivityLogEntry": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Gets or sets the identifier.",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets the name."
          },
          "Overview": {
            "type": "string",
            "description": "Gets or sets the overview.",
            "nullable": true
          },
          "ShortOverview": {
            "type": "string",
            "description": "Gets or sets the short overview.",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "description": "Gets or sets the type."
          },
          "ItemId": {
            "type": "string",
            "description": "Gets or sets the item identifier.",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "description": "Gets or sets the date.",
            "format": "date-time"
          },
          "UserId": {
            "type": "string",
            "description": "Gets or sets the user identifier.",
            "format": "uuid"
          },
          "UserPrimaryImageTag": {
            "type": "string",
            "description": "Gets or sets the user primary image tag.",
            "nullable": true,
            "deprecated": true
          },
          "Severity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LogLevel"
              }
            ],
            "description": "Gets or sets the log severity."
          }
        },
        "additionalProperties": true,
        "description": "An activity log entry."
      },
      "ActivityLogEntryQueryResult": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityLogEntry"
            },
            "description": "Gets or sets the items.",
            "nullable": true
          },
          "TotalRecordCount": {
            "type": "integer",
            "description": "Gets or sets the total number of records available.",
            "format": "int32"
          },
          "StartIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the first record in Items.",
            "format": "int32"
          }
        },
        "additionalProperties": true
      },
      "AddVirtualFolderDto": {
        "type": "object",
        "properties": {
          "LibraryOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LibraryOptions"
              }
            ],
            "description": "Gets or sets library options.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Add virtual folder dto."
      },
      "AdminNotificationDto": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the notification name.",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Gets or sets the notification description.",
            "nullable": true
          },
          "NotificationLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationLevel"
              }
            ],
            "description": "Gets or sets the notification level.",
            "nullable": true
          },
          "Url": {
            "type": "string",
            "description": "Gets or sets the notification url.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "The admin notification dto."
      },
      "AlbumInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "OriginalTitle": {
            "type": "string",
            "description": "Gets or sets the original title.",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "MetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the metadata language.",
            "nullable": true
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code.",
            "nullable": true
          },
          "ProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the provider ids.",
            "nullable": true
          },
          "Year": {
            "type": "integer",
            "description": "Gets or sets the year.",
            "format": "int32",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PremiereDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsAutomated": {
            "type": "boolean"
          },
          "AlbumArtists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the album artist."
          },
          "ArtistProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the artist provider ids."
          },
          "SongInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SongInfo"
            }
          }
        },
        "additionalProperties": true
      },
      "AlbumInfoRemoteSearchQuery": {
        "type": "object",
        "properties": {
          "SearchInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AlbumInfo"
              }
            ],
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "format": "uuid"
          },
          "SearchProviderName": {
            "type": "string",
            "description": "Gets or sets the provider name to search within if set.",
            "nullable": true
          },
          "IncludeDisabledProviders": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether disabled providers should be included."
          }
        },
        "additionalProperties": true
      },
      "AllThemeMediaResult": {
        "type": "object",
        "properties": {
          "ThemeVideosResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ThemeMediaResult"
              }
            ],
            "description": "Class ThemeMediaResult.",
            "nullable": true
          },
          "ThemeSongsResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ThemeMediaResult"
              }
            ],
            "description": "Class ThemeMediaResult.",
            "nullable": true
          },
          "SoundtrackSongsResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ThemeMediaResult"
              }
            ],
            "description": "Class ThemeMediaResult.",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "Architecture": {
        "enum": [
          "X86",
          "X64",
          "Arm",
          "Arm64",
          "Wasm",
          "S390x"
        ],
        "type": "string"
      },
      "ArtistInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "OriginalTitle": {
            "type": "string",
            "description": "Gets or sets the original title.",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "MetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the metadata language.",
            "nullable": true
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code.",
            "nullable": true
          },
          "ProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the provider ids.",
            "nullable": true
          },
          "Year": {
            "type": "integer",
            "description": "Gets or sets the year.",
            "format": "int32",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PremiereDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsAutomated": {
            "type": "boolean"
          },
          "SongInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SongInfo"
            }
          }
        },
        "additionalProperties": true
      },
      "ArtistInfoRemoteSearchQuery": {
        "type": "object",
        "properties": {
          "SearchInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ArtistInfo"
              }
            ],
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "format": "uuid"
          },
          "SearchProviderName": {
            "type": "string",
            "description": "Gets or sets the provider name to search within if set.",
            "nullable": true
          },
          "IncludeDisabledProviders": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether disabled providers should be included."
          }
        },
        "additionalProperties": true
      },
      "AuthenticateUserByName": {
        "type": "object",
        "properties": {
          "Username": {
            "type": "string",
            "description": "Gets or sets the username.",
            "nullable": true
          },
          "Pw": {
            "type": "string",
            "description": "Gets or sets the plain text password.",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "description": "Gets or sets the sha1-hashed password.",
            "nullable": true,
            "deprecated": true
          }
        },
        "additionalProperties": true,
        "description": "The authenticate user by name request body."
      },
      "AuthenticationInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Gets or sets the identifier.",
            "format": "int64"
          },
          "AccessToken": {
            "type": "string",
            "description": "Gets or sets the access token.",
            "nullable": true
          },
          "DeviceId": {
            "type": "string",
            "description": "Gets or sets the device identifier.",
            "nullable": true
          },
          "AppName": {
            "type": "string",
            "description": "Gets or sets the name of the application.",
            "nullable": true
          },
          "AppVersion": {
            "type": "string",
            "description": "Gets or sets the application version.",
            "nullable": true
          },
          "DeviceName": {
            "type": "string",
            "description": "Gets or sets the name of the device.",
            "nullable": true
          },
          "UserId": {
            "type": "string",
            "description": "Gets or sets the user identifier.",
            "format": "uuid"
          },
          "IsActive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is active."
          },
          "DateCreated": {
            "type": "string",
            "description": "Gets or sets the date created.",
            "format": "date-time"
          },
          "DateRevoked": {
            "type": "string",
            "description": "Gets or sets the date revoked.",
            "format": "date-time",
            "nullable": true
          },
          "DateLastActivity": {
            "type": "string",
            "format": "date-time"
          },
          "UserName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "AuthenticationInfoQueryResult": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthenticationInfo"
            },
            "description": "Gets or sets the items.",
            "nullable": true
          },
          "TotalRecordCount": {
            "type": "integer",
            "description": "Gets or sets the total number of records available.",
            "format": "int32"
          },
          "StartIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the first record in Items.",
            "format": "int32"
          }
        },
        "additionalProperties": true
      },
      "AuthenticationResult": {
        "type": "object",
        "properties": {
          "User": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ],
            "description": "Class UserDto.",
            "nullable": true
          },
          "SessionInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SessionInfo"
              }
            ],
            "description": "Class SessionInfo.",
            "nullable": true
          },
          "AccessToken": {
            "type": "string",
            "nullable": true
          },
          "ServerId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "BaseItem": {
        "type": "object",
        "properties": {
          "Size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Container": {
            "type": "string",
            "nullable": true
          },
          "IsHD": {
            "type": "boolean",
            "readOnly": true
          },
          "IsShortcut": {
            "type": "boolean"
          },
          "ShortcutPath": {
            "type": "string",
            "nullable": true
          },
          "Width": {
            "type": "integer",
            "format": "int32"
          },
          "Height": {
            "type": "integer",
            "format": "int32"
          },
          "ExtraIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "DateLastSaved": {
            "type": "string",
            "format": "date-time"
          },
          "RemoteTrailers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaUrl"
            },
            "description": "Gets or sets the remote trailers.",
            "nullable": true
          },
          "SupportsExternalTransfer": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": true,
        "description": "Class BaseItem."
      },
      "BaseItemDto": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "OriginalTitle": {
            "type": "string",
            "nullable": true
          },
          "ServerId": {
            "type": "string",
            "description": "Gets or sets the server identifier.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the id.",
            "format": "uuid"
          },
          "Etag": {
            "type": "string",
            "description": "Gets or sets the etag.",
            "nullable": true
          },
          "SourceType": {
            "type": "string",
            "description": "Gets or sets the type of the source.",
            "nullable": true
          },
          "PlaylistItemId": {
            "type": "string",
            "description": "Gets or sets the playlist item identifier.",
            "nullable": true
          },
          "DateCreated": {
            "type": "string",
            "description": "Gets or sets the date created.",
            "format": "date-time",
            "nullable": true
          },
          "DateLastMediaAdded": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ExtraType": {
            "type": "string",
            "nullable": true
          },
          "AirsBeforeSeasonNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AirsAfterSeasonNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AirsBeforeEpisodeNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CanDelete": {
            "type": "boolean",
            "nullable": true
          },
          "CanDownload": {
            "type": "boolean",
            "nullable": true
          },
          "HasSubtitles": {
            "type": "boolean",
            "nullable": true
          },
          "PreferredMetadataLanguage": {
            "type": "string",
            "nullable": true
          },
          "PreferredMetadataCountryCode": {
            "type": "string",
            "nullable": true
          },
          "SupportsSync": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [supports synchronize].",
            "nullable": true
          },
          "Container": {
            "type": "string",
            "nullable": true
          },
          "SortName": {
            "type": "string",
            "description": "Gets or sets the name of the sort.",
            "nullable": true
          },
          "ForcedSortName": {
            "type": "string",
            "nullable": true
          },
          "Video3DFormat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Video3DFormat"
              }
            ],
            "description": "Gets or sets the video3 D format.",
            "nullable": true
          },
          "PremiereDate": {
            "type": "string",
            "description": "Gets or sets the premiere date.",
            "format": "date-time",
            "nullable": true
          },
          "ExternalUrls": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalUrl"
            },
            "description": "Gets or sets the external urls.",
            "nullable": true
          },
          "MediaSources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaSourceInfo"
            },
            "description": "Gets or sets the media versions.",
            "nullable": true
          },
          "CriticRating": {
            "type": "number",
            "description": "Gets or sets the critic rating.",
            "format": "float",
            "nullable": true
          },
          "ProductionLocations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "EnableMediaSourceDisplay": {
            "type": "boolean",
            "nullable": true
          },
          "OfficialRating": {
            "type": "string",
            "description": "Gets or sets the official rating.",
            "nullable": true
          },
          "CustomRating": {
            "type": "string",
            "description": "Gets or sets the custom rating.",
            "nullable": true
          },
          "ChannelId": {
            "type": "string",
            "description": "Gets or sets the channel identifier.",
            "format": "uuid",
            "nullable": true
          },
          "ChannelName": {
            "type": "string",
            "nullable": true
          },
          "Overview": {
            "type": "string",
            "description": "Gets or sets the overview.",
            "nullable": true
          },
          "Taglines": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the taglines.",
            "nullable": true
          },
          "Genres": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the genres.",
            "nullable": true
          },
          "CommunityRating": {
            "type": "number",
            "description": "Gets or sets the community rating.",
            "format": "float",
            "nullable": true
          },
          "CumulativeRunTimeTicks": {
            "type": "integer",
            "description": "Gets or sets the cumulative run time ticks.",
            "format": "int64",
            "nullable": true
          },
          "RunTimeTicks": {
            "type": "integer",
            "description": "Gets or sets the run time ticks.",
            "format": "int64",
            "nullable": true
          },
          "PlayAccess": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PlayAccess"
              }
            ],
            "description": "Gets or sets the play access.",
            "nullable": true
          },
          "AspectRatio": {
            "type": "string",
            "description": "Gets or sets the aspect ratio.",
            "nullable": true
          },
          "ProductionYear": {
            "type": "integer",
            "description": "Gets or sets the production year.",
            "format": "int32",
            "nullable": true
          },
          "IsPlaceHolder": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is place holder.",
            "nullable": true
          },
          "Number": {
            "type": "string",
            "description": "Gets or sets the number.",
            "nullable": true
          },
          "ChannelNumber": {
            "type": "string",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "description": "Gets or sets the index number.",
            "format": "int32",
            "nullable": true
          },
          "IndexNumberEnd": {
            "type": "integer",
            "description": "Gets or sets the index number end.",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "description": "Gets or sets the parent index number.",
            "format": "int32",
            "nullable": true
          },
          "RemoteTrailers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaUrl"
            },
            "description": "Gets or sets the trailer urls.",
            "nullable": true
          },
          "ProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the provider ids.",
            "nullable": true
          },
          "IsHD": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is HD.",
            "nullable": true
          },
          "IsFolder": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is folder.",
            "nullable": true
          },
          "ParentId": {
            "type": "string",
            "description": "Gets or sets the parent id.",
            "format": "uuid",
            "nullable": true
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseItemKind"
              }
            ],
            "description": "Gets or sets the type."
          },
          "People": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseItemPerson"
            },
            "description": "Gets or sets the people.",
            "nullable": true
          },
          "Studios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameGuidPair"
            },
            "description": "Gets or sets the studios.",
            "nullable": true
          },
          "GenreItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameGuidPair"
            },
            "nullable": true
          },
          "ParentLogoItemId": {
            "type": "string",
            "description": "Gets or sets wether the item has a logo, this will hold the Id of the Parent that has one.",
            "format": "uuid",
            "nullable": true
          },
          "ParentBackdropItemId": {
            "type": "string",
            "description": "Gets or sets wether the item has any backdrops, this will hold the Id of the Parent that has one.",
            "format": "uuid",
            "nullable": true
          },
          "ParentBackdropImageTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the parent backdrop image tags.",
            "nullable": true
          },
          "LocalTrailerCount": {
            "type": "integer",
            "description": "Gets or sets the local trailer count.",
            "format": "int32",
            "nullable": true
          },
          "UserData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserItemDataDto"
              }
            ],
            "description": "Gets or sets the user data for this item based on the user it's being requested for.",
            "nullable": true
          },
          "RecursiveItemCount": {
            "type": "integer",
            "description": "Gets or sets the recursive item count.",
            "format": "int32",
            "nullable": true
          },
          "ChildCount": {
            "type": "integer",
            "description": "Gets or sets the child count.",
            "format": "int32",
            "nullable": true
          },
          "SeriesName": {
            "type": "string",
            "description": "Gets or sets the name of the series.",
            "nullable": true
          },
          "SeriesId": {
            "type": "string",
            "description": "Gets or sets the series id.",
            "format": "uuid",
            "nullable": true
          },
          "SeasonId": {
            "type": "string",
            "description": "Gets or sets the season identifier.",
            "format": "uuid",
            "nullable": true
          },
          "SpecialFeatureCount": {
            "type": "integer",
            "description": "Gets or sets the special feature count.",
            "format": "int32",
            "nullable": true
          },
          "DisplayPreferencesId": {
            "type": "string",
            "description": "Gets or sets the display preferences id.",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "description": "Gets or sets the status.",
            "nullable": true
          },
          "AirTime": {
            "type": "string",
            "description": "Gets or sets the air time.",
            "nullable": true
          },
          "AirDays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            },
            "description": "Gets or sets the air days.",
            "nullable": true
          },
          "Tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the tags.",
            "nullable": true
          },
          "PrimaryImageAspectRatio": {
            "type": "number",
            "description": "Gets or sets the primary image aspect ratio, after image enhancements.",
            "format": "double",
            "nullable": true
          },
          "Artists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the artists.",
            "nullable": true
          },
          "ArtistItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameGuidPair"
            },
            "description": "Gets or sets the artist items.",
            "nullable": true
          },
          "Album": {
            "type": "string",
            "description": "Gets or sets the album.",
            "nullable": true
          },
          "CollectionType": {
            "type": "string",
            "description": "Gets or sets the type of the collection.",
            "nullable": true
          },
          "DisplayOrder": {
            "type": "string",
            "description": "Gets or sets the display order.",
            "nullable": true
          },
          "AlbumId": {
            "type": "string",
            "description": "Gets or sets the album id.",
            "format": "uuid",
            "nullable": true
          },
          "AlbumPrimaryImageTag": {
            "type": "string",
            "description": "Gets or sets the album image tag.",
            "nullable": true
          },
          "SeriesPrimaryImageTag": {
            "type": "string",
            "description": "Gets or sets the series primary image tag.",
            "nullable": true
          },
          "AlbumArtist": {
            "type": "string",
            "description": "Gets or sets the album artist.",
            "nullable": true
          },
          "AlbumArtists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameGuidPair"
            },
            "description": "Gets or sets the album artists.",
            "nullable": true
          },
          "SeasonName": {
            "type": "string",
            "description": "Gets or sets the name of the season.",
            "nullable": true
          },
          "MediaStreams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaStream"
            },
            "description": "Gets or sets the media streams.",
            "nullable": true
          },
          "VideoType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VideoType"
              }
            ],
            "description": "Gets or sets the type of the video.",
            "nullable": true
          },
          "PartCount": {
            "type": "integer",
            "description": "Gets or sets the part count.",
            "format": "int32",
            "nullable": true
          },
          "MediaSourceCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ImageTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Gets or sets the image tags.",
            "nullable": true
          },
          "BackdropImageTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the backdrop image tags.",
            "nullable": true
          },
          "ScreenshotImageTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the screenshot image tags.",
            "nullable": true
          },
          "ParentLogoImageTag": {
            "type": "string",
            "description": "Gets or sets the parent logo image tag.",
            "nullable": true
          },
          "ParentArtItemId": {
            "type": "string",
            "description": "Gets or sets wether the item has fan art, this will hold the Id of the Parent that has one.",
            "format": "uuid",
            "nullable": true
          },
          "ParentArtImageTag": {
            "type": "string",
            "description": "Gets or sets the parent art image tag.",
            "nullable": true
          },
          "SeriesThumbImageTag": {
            "type": "string",
            "description": "Gets or sets the series thumb image tag.",
            "nullable": true
          },
          "ImageBlurHashes": {
            "type": "object",
            "properties": {
              "Primary": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Art": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Backdrop": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Banner": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Logo": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Thumb": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Disc": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Box": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Screenshot": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Menu": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Chapter": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "BoxRear": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Profile": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "description": "Gets or sets the blurhashes for the image tags.\r\nMaps image type to dictionary mapping image tag to blurhash value.",
            "nullable": true
          },
          "SeriesStudio": {
            "type": "string",
            "description": "Gets or sets the series studio.",
            "nullable": true
          },
          "ParentThumbItemId": {
            "type": "string",
            "description": "Gets or sets the parent thumb item id.",
            "format": "uuid",
            "nullable": true
          },
          "ParentThumbImageTag": {
            "type": "string",
            "description": "Gets or sets the parent thumb image tag.",
            "nullable": true
          },
          "ParentPrimaryImageItemId": {
            "type": "string",
            "description": "Gets or sets the parent primary image item identifier.",
            "nullable": true
          },
          "ParentPrimaryImageTag": {
            "type": "string",
            "description": "Gets or sets the parent primary image tag.",
            "nullable": true
          },
          "Chapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChapterInfo"
            },
            "description": "Gets or sets the chapters.",
            "nullable": true
          },
          "LocationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LocationType"
              }
            ],
            "description": "Gets or sets the type of the location.",
            "nullable": true
          },
          "IsoType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IsoType"
              }
            ],
            "description": "Gets or sets the type of the iso.",
            "nullable": true
          },
          "MediaType": {
            "type": "string",
            "description": "Gets or sets the type of the media.",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "description": "Gets or sets the end date.",
            "format": "date-time",
            "nullable": true
          },
          "LockedFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataField"
            },
            "description": "Gets or sets the locked fields.",
            "nullable": true
          },
          "TrailerCount": {
            "type": "integer",
            "description": "Gets or sets the trailer count.",
            "format": "int32",
            "nullable": true
          },
          "MovieCount": {
            "type": "integer",
            "description": "Gets or sets the movie count.",
            "format": "int32",
            "nullable": true
          },
          "SeriesCount": {
            "type": "integer",
            "description": "Gets or sets the series count.",
            "format": "int32",
            "nullable": true
          },
          "ProgramCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "EpisodeCount": {
            "type": "integer",
            "description": "Gets or sets the episode count.",
            "format": "int32",
            "nullable": true
          },
          "SongCount": {
            "type": "integer",
            "description": "Gets or sets the song count.",
            "format": "int32",
            "nullable": true
          },
          "AlbumCount": {
            "type": "integer",
            "description": "Gets or sets the album count.",
            "format": "int32",
            "nullable": true
          },
          "ArtistCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MusicVideoCount": {
            "type": "integer",
            "description": "Gets or sets the music video count.",
            "format": "int32",
            "nullable": true
          },
          "LockData": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [enable internet providers].",
            "nullable": true
          },
          "Width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CameraMake": {
            "type": "string",
            "nullable": true
          },
          "CameraModel": {
            "type": "string",
            "nullable": true
          },
          "Software": {
            "type": "string",
            "nullable": true
          },
          "ExposureTime": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "FocalLength": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ImageOrientation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageOrientation"
              }
            ],
            "nullable": true
          },
          "Aperture": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "ShutterSpeed": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Latitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Longitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Altitude": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "IsoSpeedRating": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SeriesTimerId": {
            "type": "string",
            "description": "Gets or sets the series timer identifier.",
            "nullable": true
          },
          "ProgramId": {
            "type": "string",
            "description": "Gets or sets the program identifier.",
            "nullable": true
          },
          "ChannelPrimaryImageTag": {
            "type": "string",
            "description": "Gets or sets the channel primary image tag.",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Gets or sets the start date of the recording, in UTC.",
            "format": "date-time",
            "nullable": true
          },
          "CompletionPercentage": {
            "type": "number",
            "description": "Gets or sets the completion percentage.",
            "format": "double",
            "nullable": true
          },
          "IsRepeat": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is repeat.",
            "nullable": true
          },
          "EpisodeTitle": {
            "type": "string",
            "description": "Gets or sets the episode title.",
            "nullable": true
          },
          "ChannelType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ChannelType"
              }
            ],
            "description": "Gets or sets the type of the channel.",
            "nullable": true
          },
          "Audio": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProgramAudio"
              }
            ],
            "description": "Gets or sets the audio.",
            "nullable": true
          },
          "IsMovie": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is movie.",
            "nullable": true
          },
          "IsSports": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is sports.",
            "nullable": true
          },
          "IsSeries": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is series.",
            "nullable": true
          },
          "IsLive": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is live.",
            "nullable": true
          },
          "IsNews": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is news.",
            "nullable": true
          },
          "IsKids": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is kids.",
            "nullable": true
          },
          "IsPremiere": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is premiere.",
            "nullable": true
          },
          "TimerId": {
            "type": "string",
            "description": "Gets or sets the timer identifier.",
            "nullable": true
          },
          "CurrentProgram": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseItemDto"
              }
            ],
            "description": "Gets or sets the current program.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "This is strictly used as a data transfer object from the api layer.\r\nThis holds information about a BaseItem in a format that is convenient for the client."
      },
      "BaseItemDtoQueryResult": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseItemDto"
            },
            "description": "Gets or sets the items.",
            "nullable": true
          },
          "TotalRecordCount": {
            "type": "integer",
            "description": "Gets or sets the total number of records available.",
            "format": "int32"
          },
          "StartIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the first record in Items.",
            "format": "int32"
          }
        },
        "additionalProperties": true
      },
      "BaseItemKind": {
        "enum": [
          "AggregateFolder",
          "Audio",
          "AudioBook",
          "BasePluginFolder",
          "Book",
          "BoxSet",
          "Channel",
          "ChannelFolderItem",
          "CollectionFolder",
          "Episode",
          "Folder",
          "Genre",
          "ManualPlaylistsFolder",
          "Movie",
          "LiveTvChannel",
          "LiveTvProgram",
          "MusicAlbum",
          "MusicArtist",
          "MusicGenre",
          "MusicVideo",
          "Person",
          "Photo",
          "PhotoAlbum",
          "Playlist",
          "PlaylistsFolder",
          "Program",
          "Recording",
          "Season",
          "Series",
          "Studio",
          "Trailer",
          "TvChannel",
          "TvProgram",
          "UserRootFolder",
          "UserView",
          "Video",
          "Year"
        ],
        "type": "string",
        "description": "The base item kind."
      },
      "BaseItemPerson": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "format": "uuid"
          },
          "Role": {
            "type": "string",
            "description": "Gets or sets the role.",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "description": "Gets or sets the type.",
            "nullable": true
          },
          "PrimaryImageTag": {
            "type": "string",
            "description": "Gets or sets the primary image tag.",
            "nullable": true
          },
          "ImageBlurHashes": {
            "type": "object",
            "properties": {
              "Primary": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Art": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Backdrop": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Banner": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Logo": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Thumb": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Disc": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Box": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Screenshot": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Menu": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Chapter": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "BoxRear": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "Profile": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "description": "Gets or sets the primary image blurhash.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "This is used by the api to get information about a Person within a BaseItem."
      },
      "BasePluginConfiguration": {
        "type": "object",
        "additionalProperties": true,
        "description": "Class BasePluginConfiguration."
      },
      "BookInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "OriginalTitle": {
            "type": "string",
            "description": "Gets or sets the original title.",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "MetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the metadata language.",
            "nullable": true
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code.",
            "nullable": true
          },
          "ProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the provider ids.",
            "nullable": true
          },
          "Year": {
            "type": "integer",
            "description": "Gets or sets the year.",
            "format": "int32",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PremiereDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsAutomated": {
            "type": "boolean"
          },
          "SeriesName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "BookInfoRemoteSearchQuery": {
        "type": "object",
        "properties": {
          "SearchInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BookInfo"
              }
            ],
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "format": "uuid"
          },
          "SearchProviderName": {
            "type": "string",
            "description": "Gets or sets the provider name to search within if set.",
            "nullable": true
          },
          "IncludeDisabledProviders": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether disabled providers should be included."
          }
        },
        "additionalProperties": true
      },
      "BoxSetInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "OriginalTitle": {
            "type": "string",
            "description": "Gets or sets the original title.",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "MetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the metadata language.",
            "nullable": true
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code.",
            "nullable": true
          },
          "ProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the provider ids.",
            "nullable": true
          },
          "Year": {
            "type": "integer",
            "description": "Gets or sets the year.",
            "format": "int32",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PremiereDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsAutomated": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "BoxSetInfoRemoteSearchQuery": {
        "type": "object",
        "properties": {
          "SearchInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BoxSetInfo"
              }
            ],
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "format": "uuid"
          },
          "SearchProviderName": {
            "type": "string",
            "description": "Gets or sets the provider name to search within if set.",
            "nullable": true
          },
          "IncludeDisabledProviders": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether disabled providers should be included."
          }
        },
        "additionalProperties": true
      },
      "BrandingOptions": {
        "type": "object",
        "properties": {
          "LoginDisclaimer": {
            "type": "string",
            "description": "Gets or sets the login disclaimer.",
            "nullable": true
          },
          "CustomCss": {
            "type": "string",
            "description": "Gets or sets the custom CSS.",
            "nullable": true
          },
          "SplashscreenEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to enable the splashscreen."
          }
        },
        "additionalProperties": true,
        "description": "The branding options."
      },
      "BufferRequestDto": {
        "type": "object",
        "properties": {
          "When": {
            "type": "string",
            "description": "Gets or sets when the request has been made by the client.",
            "format": "date-time"
          },
          "PositionTicks": {
            "type": "integer",
            "description": "Gets or sets the position ticks.",
            "format": "int64"
          },
          "IsPlaying": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the client playback is unpaused."
          },
          "PlaylistItemId": {
            "type": "string",
            "description": "Gets or sets the playlist item identifier of the playing item.",
            "format": "uuid"
          }
        },
        "additionalProperties": true,
        "description": "Class BufferRequestDto."
      },
      "ChannelFeatures": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name."
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "format": "uuid"
          },
          "CanSearch": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance can search."
          },
          "MediaTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChannelMediaType"
            },
            "description": "Gets or sets the media types."
          },
          "ContentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChannelMediaContentType"
            },
            "description": "Gets or sets the content types."
          },
          "MaxPageSize": {
            "type": "integer",
            "description": "Gets or sets the maximum number of records the channel allows retrieving at a time.",
            "format": "int32",
            "nullable": true
          },
          "AutoRefreshLevels": {
            "type": "integer",
            "description": "Gets or sets the automatic refresh levels.",
            "format": "int32",
            "nullable": true
          },
          "DefaultSortFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChannelItemSortField"
            },
            "description": "Gets or sets the default sort orders."
          },
          "SupportsSortOrderToggle": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether a sort ascending/descending toggle is supported."
          },
          "SupportsLatestMedia": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [supports latest media]."
          },
          "CanFilter": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance can filter."
          },
          "SupportsContentDownloading": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [supports content downloading]."
          }
        },
        "additionalProperties": true
      },
      "ChannelItemSortField": {
        "enum": [
          "Name",
          "CommunityRating",
          "PremiereDate",
          "DateCreated",
          "Runtime",
          "PlayCount",
          "CommunityPlayCount"
        ],
        "type": "string"
      },
      "ChannelMappingOptionsDto": {
        "type": "object",
        "properties": {
          "TunerChannels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TunerChannelMapping"
            },
            "description": "Gets or sets list of tuner channels."
          },
          "ProviderChannels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameIdPair"
            },
            "description": "Gets or sets list of provider channels."
          },
          "Mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValuePair"
            },
            "description": "Gets or sets list of mappings."
          },
          "ProviderName": {
            "type": "string",
            "description": "Gets or sets provider name.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Channel mapping options dto."
      },
      "ChannelMediaContentType": {
        "enum": [
          "Clip",
          "Podcast",
          "Trailer",
          "Movie",
          "Episode",
          "Song",
          "MovieExtra",
          "TvExtra"
        ],
        "type": "string"
      },
      "ChannelMediaType": {
        "enum": [
          "Audio",
          "Video",
          "Photo"
        ],
        "type": "string"
      },
      "ChannelType": {
        "enum": [
          "TV",
          "Radio"
        ],
        "type": "string",
        "description": "Enum ChannelType."
      },
      "ChapterInfo": {
        "type": "object",
        "properties": {
          "StartPositionTicks": {
            "type": "integer",
            "description": "Gets or sets the start position ticks.",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "ImagePath": {
            "type": "string",
            "description": "Gets or sets the image path.",
            "nullable": true
          },
          "ImageDateModified": {
            "type": "string",
            "format": "date-time"
          },
          "ImageTag": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class ChapterInfo."
      },
      "ClientCapabilities": {
        "type": "object",
        "properties": {
          "PlayableMediaTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "SupportedCommands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeneralCommandType"
            },
            "nullable": true
          },
          "SupportsMediaControl": {
            "type": "boolean"
          },
          "SupportsContentUploading": {
            "type": "boolean"
          },
          "MessageCallbackUrl": {
            "type": "string",
            "nullable": true
          },
          "SupportsPersistentIdentifier": {
            "type": "boolean"
          },
          "SupportsSync": {
            "type": "boolean"
          },
          "DeviceProfile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeviceProfile"
              }
            ],
            "description": "A MediaBrowser.Model.Dlna.DeviceProfile represents a set of metadata which determines which content a certain device is able to play.\r\n<br />\r\nSpecifically, it defines the supported <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.ContainerProfiles\">containers</see> and\r\n<see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.CodecProfiles\">codecs</see> (video and/or audio, including codec profiles and levels)\r\nthe device is able to direct play (without transcoding or remuxing),\r\nas well as which <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.TranscodingProfiles\">containers/codecs to transcode to</see> in case it isn't.",
            "nullable": true
          },
          "AppStoreUrl": {
            "type": "string",
            "nullable": true
          },
          "IconUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "ClientCapabilitiesDto": {
        "type": "object",
        "properties": {
          "PlayableMediaTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the list of playable media types."
          },
          "SupportedCommands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeneralCommandType"
            },
            "description": "Gets or sets the list of supported commands."
          },
          "SupportsMediaControl": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether session supports media control."
          },
          "SupportsContentUploading": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether session supports content uploading."
          },
          "MessageCallbackUrl": {
            "type": "string",
            "description": "Gets or sets the message callback url.",
            "nullable": true
          },
          "SupportsPersistentIdentifier": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether session supports a persistent identifier."
          },
          "SupportsSync": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether session supports sync."
          },
          "DeviceProfile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeviceProfile"
              }
            ],
            "description": "A MediaBrowser.Model.Dlna.DeviceProfile represents a set of metadata which determines which content a certain device is able to play.\r\n<br />\r\nSpecifically, it defines the supported <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.ContainerProfiles\">containers</see> and\r\n<see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.CodecProfiles\">codecs</see> (video and/or audio, including codec profiles and levels)\r\nthe device is able to direct play (without transcoding or remuxing),\r\nas well as which <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.TranscodingProfiles\">containers/codecs to transcode to</see> in case it isn't.",
            "nullable": true
          },
          "AppStoreUrl": {
            "type": "string",
            "description": "Gets or sets the app store url.",
            "nullable": true
          },
          "IconUrl": {
            "type": "string",
            "description": "Gets or sets the icon url.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Client capabilities dto."
      },
      "ClientLogDocumentResponseDto": {
        "type": "object",
        "properties": {
          "FileName": {
            "type": "string",
            "description": "Gets the resulting filename."
          }
        },
        "additionalProperties": true,
        "description": "Client log document response dto."
      },
      "CodecProfile": {
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CodecType"
              }
            ]
          },
          "Conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfileCondition"
            },
            "nullable": true
          },
          "ApplyConditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfileCondition"
            },
            "nullable": true
          },
          "Codec": {
            "type": "string",
            "nullable": true
          },
          "Container": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "CodecType": {
        "enum": [
          "Video",
          "VideoAudio",
          "Audio"
        ],
        "type": "string"
      },
      "CollectionCreationResult": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": true
      },
      "CollectionTypeOptions": {
        "enum": [
          "Movies",
          "TvShows",
          "Music",
          "MusicVideos",
          "HomeVideos",
          "BoxSets",
          "Books",
          "Mixed"
        ],
        "type": "string"
      },
      "ConfigImageTypes": {
        "type": "object",
        "properties": {
          "BackdropSizes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "BaseUrl": {
            "type": "string",
            "nullable": true
          },
          "LogoSizes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "PosterSizes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ProfileSizes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "SecureBaseUrl": {
            "type": "string",
            "nullable": true
          },
          "StillSizes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "ConfigurationPageInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name."
          },
          "EnableInMainMenu": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the configurations page is enabled in the main menu."
          },
          "MenuSection": {
            "type": "string",
            "description": "Gets or sets the menu section.",
            "nullable": true
          },
          "MenuIcon": {
            "type": "string",
            "description": "Gets or sets the menu icon.",
            "nullable": true
          },
          "DisplayName": {
            "type": "string",
            "description": "Gets or sets the display name.",
            "nullable": true
          },
          "PluginId": {
            "type": "string",
            "description": "Gets or sets the plugin id.",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "The configuration page info."
      },
      "ContainerProfile": {
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DlnaProfileType"
              }
            ]
          },
          "Conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfileCondition"
            },
            "nullable": true
          },
          "Container": {
            "type": "string"
          }
        },
        "additionalProperties": true
      },
      "ControlResponse": {
        "type": "object",
        "properties": {
          "Headers": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "readOnly": true
          },
          "Xml": {
            "type": "string"
          },
          "IsSuccessful": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "CountryInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "DisplayName": {
            "type": "string",
            "description": "Gets or sets the display name.",
            "nullable": true
          },
          "TwoLetterISORegionName": {
            "type": "string",
            "description": "Gets or sets the name of the two letter ISO region.",
            "nullable": true
          },
          "ThreeLetterISORegionName": {
            "type": "string",
            "description": "Gets or sets the name of the three letter ISO region.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class CountryInfo."
      },
      "CreatePlaylistDto": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name of the new playlist.",
            "nullable": true
          },
          "Ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets item ids to add to the playlist."
          },
          "UserId": {
            "type": "string",
            "description": "Gets or sets the user id.",
            "format": "uuid",
            "nullable": true
          },
          "MediaType": {
            "type": "string",
            "description": "Gets or sets the media type.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Create new playlist dto."
      },
      "CreateUserByName": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the username.",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "description": "Gets or sets the password.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "The create user by name request body."
      },
      "CultureDto": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets the name."
          },
          "DisplayName": {
            "type": "string",
            "description": "Gets the display name."
          },
          "TwoLetterISOLanguageName": {
            "type": "string",
            "description": "Gets the name of the two letter ISO language."
          },
          "ThreeLetterISOLanguageName": {
            "type": "string",
            "description": "Gets the name of the three letter ISO language.",
            "nullable": true,
            "readOnly": true
          },
          "ThreeLetterISOLanguageNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": true,
        "description": "Class CultureDto."
      },
      "DayOfWeek": {
        "enum": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "type": "string"
      },
      "DayPattern": {
        "enum": [
          "Daily",
          "Weekdays",
          "Weekends"
        ],
        "type": "string"
      },
      "DefaultDirectoryBrowserInfoDto": {
        "type": "object",
        "properties": {
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Default directory browser info."
      },
      "DeviceIdentification": {
        "type": "object",
        "properties": {
          "FriendlyName": {
            "type": "string",
            "description": "Gets or sets the name of the friendly."
          },
          "ModelNumber": {
            "type": "string",
            "description": "Gets or sets the model number."
          },
          "SerialNumber": {
            "type": "string",
            "description": "Gets or sets the serial number."
          },
          "ModelName": {
            "type": "string",
            "description": "Gets or sets the name of the model."
          },
          "ModelDescription": {
            "type": "string",
            "description": "Gets or sets the model description."
          },
          "ModelUrl": {
            "type": "string",
            "description": "Gets or sets the model URL."
          },
          "Manufacturer": {
            "type": "string",
            "description": "Gets or sets the manufacturer."
          },
          "ManufacturerUrl": {
            "type": "string",
            "description": "Gets or sets the manufacturer URL."
          },
          "Headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/HttpHeaderInfo"
            },
            "description": "Gets or sets the headers."
          }
        },
        "additionalProperties": true
      },
      "DeviceInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "AccessToken": {
            "type": "string",
            "description": "Gets or sets the access token.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "nullable": true
          },
          "LastUserName": {
            "type": "string",
            "description": "Gets or sets the last name of the user.",
            "nullable": true
          },
          "AppName": {
            "type": "string",
            "description": "Gets or sets the name of the application.",
            "nullable": true
          },
          "AppVersion": {
            "type": "string",
            "description": "Gets or sets the application version.",
            "nullable": true
          },
          "LastUserId": {
            "type": "string",
            "description": "Gets or sets the last user identifier.",
            "format": "uuid"
          },
          "DateLastActivity": {
            "type": "string",
            "description": "Gets or sets the date last modified.",
            "format": "date-time"
          },
          "Capabilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ClientCapabilities"
              }
            ],
            "description": "Gets or sets the capabilities.",
            "nullable": true
          },
          "IconUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "DeviceInfoQueryResult": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceInfo"
            },
            "description": "Gets or sets the items.",
            "nullable": true
          },
          "TotalRecordCount": {
            "type": "integer",
            "description": "Gets or sets the total number of records available.",
            "format": "int32"
          },
          "StartIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the first record in Items.",
            "format": "int32"
          }
        },
        "additionalProperties": true
      },
      "DeviceOptions": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Gets the id.",
            "format": "int32",
            "readOnly": true
          },
          "DeviceId": {
            "type": "string",
            "description": "Gets the device id."
          },
          "CustomName": {
            "type": "string",
            "description": "Gets or sets the custom name.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "An entity representing custom options for a device."
      },
      "DeviceOptionsDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Gets or sets the id.",
            "format": "int32"
          },
          "DeviceId": {
            "type": "string",
            "description": "Gets or sets the device id.",
            "nullable": true
          },
          "CustomName": {
            "type": "string",
            "description": "Gets or sets the custom name.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "A dto representing custom options for a device."
      },
      "DeviceProfile": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name of this device profile.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the Id.",
            "nullable": true
          },
          "Identification": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeviceIdentification"
              }
            ],
            "description": "Gets or sets the Identification.",
            "nullable": true
          },
          "FriendlyName": {
            "type": "string",
            "description": "Gets or sets the friendly name of the device profile, which can be shown to users.",
            "nullable": true
          },
          "Manufacturer": {
            "type": "string",
            "description": "Gets or sets the manufacturer of the device which this profile represents.",
            "nullable": true
          },
          "ManufacturerUrl": {
            "type": "string",
            "description": "Gets or sets an url for the manufacturer of the device which this profile represents.",
            "nullable": true
          },
          "ModelName": {
            "type": "string",
            "description": "Gets or sets the model name of the device which this profile represents.",
            "nullable": true
          },
          "ModelDescription": {
            "type": "string",
            "description": "Gets or sets the model description of the device which this profile represents.",
            "nullable": true
          },
          "ModelNumber": {
            "type": "string",
            "description": "Gets or sets the model number of the device which this profile represents.",
            "nullable": true
          },
          "ModelUrl": {
            "type": "string",
            "description": "Gets or sets the ModelUrl.",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "Gets or sets the serial number of the device which this profile represents.",
            "nullable": true
          },
          "EnableAlbumArtInDidl": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether EnableAlbumArtInDidl.",
            "default": false
          },
          "EnableSingleAlbumArtLimit": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether EnableSingleAlbumArtLimit.",
            "default": false
          },
          "EnableSingleSubtitleLimit": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether EnableSingleSubtitleLimit.",
            "default": false
          },
          "SupportedMediaTypes": {
            "type": "string",
            "description": "Gets or sets the SupportedMediaTypes."
          },
          "UserId": {
            "type": "string",
            "description": "Gets or sets the UserId.",
            "nullable": true
          },
          "AlbumArtPn": {
            "type": "string",
            "description": "Gets or sets the AlbumArtPn.",
            "nullable": true
          },
          "MaxAlbumArtWidth": {
            "type": "integer",
            "description": "Gets or sets the MaxAlbumArtWidth.",
            "format": "int32",
            "nullable": true
          },
          "MaxAlbumArtHeight": {
            "type": "integer",
            "description": "Gets or sets the MaxAlbumArtHeight.",
            "format": "int32",
            "nullable": true
          },
          "MaxIconWidth": {
            "type": "integer",
            "description": "Gets or sets the maximum allowed width of embedded icons.",
            "format": "int32",
            "nullable": true
          },
          "MaxIconHeight": {
            "type": "integer",
            "description": "Gets or sets the maximum allowed height of embedded icons.",
            "format": "int32",
            "nullable": true
          },
          "MaxStreamingBitrate": {
            "type": "integer",
            "description": "Gets or sets the maximum allowed bitrate for all streamed content.",
            "format": "int32",
            "nullable": true
          },
          "MaxStaticBitrate": {
            "type": "integer",
            "description": "Gets or sets the maximum allowed bitrate for statically streamed content (= direct played files).",
            "format": "int32",
            "nullable": true
          },
          "MusicStreamingTranscodingBitrate": {
            "type": "integer",
            "description": "Gets or sets the maximum allowed bitrate for transcoded music streams.",
            "format": "int32",
            "nullable": true
          },
          "MaxStaticMusicBitrate": {
            "type": "integer",
            "description": "Gets or sets the maximum allowed bitrate for statically streamed (= direct played) music files.",
            "format": "int32",
            "nullable": true
          },
          "SonyAggregationFlags": {
            "type": "string",
            "description": "Gets or sets the content of the aggregationFlags element in the urn:schemas-sonycom:av namespace.",
            "nullable": true
          },
          "ProtocolInfo": {
            "type": "string",
            "description": "Gets or sets the ProtocolInfo.",
            "nullable": true
          },
          "TimelineOffsetSeconds": {
            "type": "integer",
            "description": "Gets or sets the TimelineOffsetSeconds.",
            "format": "int32",
            "default": 0
          },
          "RequiresPlainVideoItems": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether RequiresPlainVideoItems.",
            "default": false
          },
          "RequiresPlainFolders": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether RequiresPlainFolders.",
            "default": false
          },
          "EnableMSMediaReceiverRegistrar": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether EnableMSMediaReceiverRegistrar.",
            "default": false
          },
          "IgnoreTranscodeByteRangeRequests": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether IgnoreTranscodeByteRangeRequests.",
            "default": false
          },
          "XmlRootAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/XmlAttribute"
            },
            "description": "Gets or sets the XmlRootAttributes."
          },
          "DirectPlayProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DirectPlayProfile"
            },
            "description": "Gets or sets the direct play profiles."
          },
          "TranscodingProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscodingProfile"
            },
            "description": "Gets or sets the transcoding profiles."
          },
          "ContainerProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContainerProfile"
            },
            "description": "Gets or sets the container profiles."
          },
          "CodecProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CodecProfile"
            },
            "description": "Gets or sets the codec profiles."
          },
          "ResponseProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseProfile"
            },
            "description": "Gets or sets the ResponseProfiles."
          },
          "SubtitleProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubtitleProfile"
            },
            "description": "Gets or sets the subtitle profiles."
          }
        },
        "additionalProperties": true,
        "description": "A MediaBrowser.Model.Dlna.DeviceProfile represents a set of metadata which determines which content a certain device is able to play.\r\n<br />\r\nSpecifically, it defines the supported <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.ContainerProfiles\">containers</see> and\r\n<see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.CodecProfiles\">codecs</see> (video and/or audio, including codec profiles and levels)\r\nthe device is able to direct play (without transcoding or remuxing),\r\nas well as which <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.TranscodingProfiles\">containers/codecs to transcode to</see> in case it isn't."
      },
      "DeviceProfileInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeviceProfileType"
              }
            ],
            "description": "Gets or sets the type."
          }
        },
        "additionalProperties": true
      },
      "DeviceProfileType": {
        "enum": [
          "System",
          "User"
        ],
        "type": "string"
      },
      "DirectPlayProfile": {
        "type": "object",
        "properties": {
          "Container": {
            "type": "string",
            "nullable": true
          },
          "AudioCodec": {
            "type": "string",
            "nullable": true
          },
          "VideoCodec": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DlnaProfileType"
              }
            ]
          }
        },
        "additionalProperties": true
      },
      "DisplayPreferencesDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets the user id.",
            "nullable": true
          },
          "ViewType": {
            "type": "string",
            "description": "Gets or sets the type of the view.",
            "nullable": true
          },
          "SortBy": {
            "type": "string",
            "description": "Gets or sets the sort by.",
            "nullable": true
          },
          "IndexBy": {
            "type": "string",
            "description": "Gets or sets the index by.",
            "nullable": true
          },
          "RememberIndexing": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [remember indexing]."
          },
          "PrimaryImageHeight": {
            "type": "integer",
            "description": "Gets or sets the height of the primary image.",
            "format": "int32"
          },
          "PrimaryImageWidth": {
            "type": "integer",
            "description": "Gets or sets the width of the primary image.",
            "format": "int32"
          },
          "CustomPrefs": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the custom prefs."
          },
          "ScrollDirection": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ScrollDirection"
              }
            ],
            "description": "Gets or sets the scroll direction."
          },
          "ShowBackdrop": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to show backdrops on this item."
          },
          "RememberSorting": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [remember sorting]."
          },
          "SortOrder": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SortOrder"
              }
            ],
            "description": "Gets or sets the sort order."
          },
          "ShowSidebar": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [show sidebar]."
          },
          "Client": {
            "type": "string",
            "description": "Gets or sets the client.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Defines the display preferences for any item that supports them (usually Folders)."
      },
      "DlnaOptions": {
        "type": "object",
        "properties": {
          "EnablePlayTo": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether gets or sets a value to indicate the status of the dlna playTo subsystem."
          },
          "EnableServer": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether gets or sets a value to indicate the status of the dlna server subsystem."
          },
          "EnableDebugLog": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether detailed dlna server logs are sent to the console/log.\r\nIf the setting \"Emby.Dlna\": \"Debug\" msut be set in logging.default.json for this property to work."
          },
          "EnablePlayToTracing": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether whether detailed playTo debug logs are sent to the console/log.\r\nIf the setting \"Emby.Dlna.PlayTo\": \"Debug\" msut be set in logging.default.json for this property to work."
          },
          "ClientDiscoveryIntervalSeconds": {
            "type": "integer",
            "description": "Gets or sets the ssdp client discovery interval time (in seconds).\r\nThis is the time after which the server will send a ssdp search request.",
            "format": "int32"
          },
          "AliveMessageIntervalSeconds": {
            "type": "integer",
            "description": "Gets or sets the frequency at which ssdp alive notifications are transmitted.",
            "format": "int32"
          },
          "BlastAliveMessageIntervalSeconds": {
            "type": "integer",
            "description": "Gets or sets the frequency at which ssdp alive notifications are transmitted. MIGRATING - TO BE REMOVED ONCE WEB HAS BEEN ALTERED.",
            "format": "int32"
          },
          "DefaultUserId": {
            "type": "string",
            "description": "Gets or sets the default user account that the dlna server uses.",
            "nullable": true
          },
          "AutoCreatePlayToProfiles": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether playTo device profiles should be created."
          },
          "BlastAliveMessages": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to blast alive messages."
          },
          "SendOnlyMatchedHost": {
            "type": "boolean",
            "description": "gets or sets a value indicating whether to send only matched host."
          }
        },
        "additionalProperties": true,
        "description": "The DlnaOptions class contains the user definable parameters for the dlna subsystems."
      },
      "DlnaProfileType": {
        "enum": [
          "Audio",
          "Video",
          "Photo",
          "Subtitle"
        ],
        "type": "string"
      },
      "DynamicDayOfWeek": {
        "enum": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
          "Everyday",
          "Weekday",
          "Weekend"
        ],
        "type": "string",
        "description": "An enum that represents a day of the week, weekdays, weekends, or all days."
      },
      "EmbeddedSubtitleOptions": {
        "enum": [
          "AllowAll",
          "AllowText",
          "AllowImage",
          "AllowNone"
        ],
        "type": "string",
        "description": "An enum representing the options to disable embedded subs."
      },
      "EncodingContext": {
        "enum": [
          "Streaming",
          "Static"
        ],
        "type": "string"
      },
      "EncodingOptions": {
        "type": "object",
        "properties": {
          "EncodingThreadCount": {
            "type": "integer",
            "format": "int32"
          },
          "TranscodingTempPath": {
            "type": "string",
            "nullable": true
          },
          "FallbackFontPath": {
            "type": "string",
            "nullable": true
          },
          "EnableFallbackFont": {
            "type": "boolean"
          },
          "DownMixAudioBoost": {
            "type": "number",
            "format": "double"
          },
          "MaxMuxingQueueSize": {
            "type": "integer",
            "format": "int32"
          },
          "EnableThrottling": {
            "type": "boolean"
          },
          "ThrottleDelaySeconds": {
            "type": "integer",
            "format": "int32"
          },
          "HardwareAccelerationType": {
            "type": "string",
            "nullable": true
          },
          "EncoderAppPath": {
            "type": "string",
            "description": "Gets or sets the FFmpeg path as set by the user via the UI.",
            "nullable": true
          },
          "EncoderAppPathDisplay": {
            "type": "string",
            "description": "Gets or sets the current FFmpeg path being used by the system and displayed on the transcode page.",
            "nullable": true
          },
          "VaapiDevice": {
            "type": "string",
            "nullable": true
          },
          "EnableTonemapping": {
            "type": "boolean"
          },
          "EnableVppTonemapping": {
            "type": "boolean"
          },
          "TonemappingAlgorithm": {
            "type": "string",
            "nullable": true
          },
          "TonemappingMode": {
            "type": "string",
            "nullable": true
          },
          "TonemappingRange": {
            "type": "string",
            "nullable": true
          },
          "TonemappingDesat": {
            "type": "number",
            "format": "double"
          },
          "TonemappingPeak": {
            "type": "number",
            "format": "double"
          },
          "TonemappingParam": {
            "type": "number",
            "format": "double"
          },
          "VppTonemappingBrightness": {
            "type": "number",
            "format": "double"
          },
          "VppTonemappingContrast": {
            "type": "number",
            "format": "double"
          },
          "H264Crf": {
            "type": "integer",
            "format": "int32"
          },
          "H265Crf": {
            "type": "integer",
            "format": "int32"
          },
          "EncoderPreset": {
            "type": "string",
            "nullable": true
          },
          "DeinterlaceDoubleRate": {
            "type": "boolean"
          },
          "DeinterlaceMethod": {
            "type": "string",
            "nullable": true
          },
          "EnableDecodingColorDepth10Hevc": {
            "type": "boolean"
          },
          "EnableDecodingColorDepth10Vp9": {
            "type": "boolean"
          },
          "EnableEnhancedNvdecDecoder": {
            "type": "boolean"
          },
          "PreferSystemNativeHwDecoder": {
            "type": "boolean"
          },
          "EnableIntelLowPowerH264HwEncoder": {
            "type": "boolean"
          },
          "EnableIntelLowPowerHevcHwEncoder": {
            "type": "boolean"
          },
          "EnableHardwareEncoding": {
            "type": "boolean"
          },
          "AllowHevcEncoding": {
            "type": "boolean"
          },
          "EnableSubtitleExtraction": {
            "type": "boolean"
          },
          "HardwareDecodingCodecs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "AllowOnDemandMetadataBasedKeyframeExtractionForExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "EndPointInfo": {
        "type": "object",
        "properties": {
          "IsLocal": {
            "type": "boolean"
          },
          "IsInNetwork": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "ExternalIdInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the display name of the external id provider (IE: IMDB, MusicBrainz, etc)."
          },
          "Key": {
            "type": "string",
            "description": "Gets or sets the unique key for this id. This key should be unique across all providers."
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ExternalIdMediaType"
              }
            ],
            "description": "Gets or sets the specific media type for this id. This is used to distinguish between the different\r\nexternal id types for providers with multiple ids.\r\nA null value indicates there is no specific media type associated with the external id, or this is the\r\ndefault id for the external provider so there is no need to specify a type.",
            "nullable": true
          },
          "UrlFormatString": {
            "type": "string",
            "description": "Gets or sets the URL format string.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Represents the external id information for serialization to the client."
      },
      "ExternalIdMediaType": {
        "enum": [
          "Album",
          "AlbumArtist",
          "Artist",
          "BoxSet",
          "Episode",
          "Movie",
          "OtherArtist",
          "Person",
          "ReleaseGroup",
          "Season",
          "Series",
          "Track"
        ],
        "type": "string",
        "description": "The specific media type of an MediaBrowser.Model.Providers.ExternalIdInfo."
      },
      "ExternalUrl": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "Url": {
            "type": "string",
            "description": "Gets or sets the type of the item.",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "FFmpegLocation": {
        "enum": [
          "NotFound",
          "SetByArgument",
          "Custom",
          "System"
        ],
        "type": "string",
        "description": "Enum describing the location of the FFmpeg tool."
      },
      "FileSystemEntryInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets the name."
          },
          "Path": {
            "type": "string",
            "description": "Gets the path."
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FileSystemEntryType"
              }
            ],
            "description": "Gets the type."
          }
        },
        "additionalProperties": true,
        "description": "Class FileSystemEntryInfo."
      },
      "FileSystemEntryType": {
        "enum": [
          "File",
          "Directory",
          "NetworkComputer",
          "NetworkShare"
        ],
        "type": "string",
        "description": "Enum FileSystemEntryType."
      },
      "FontFile": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "Size": {
            "type": "integer",
            "description": "Gets or sets the size.",
            "format": "int64"
          },
          "DateCreated": {
            "type": "string",
            "description": "Gets or sets the date created.",
            "format": "date-time"
          },
          "DateModified": {
            "type": "string",
            "description": "Gets or sets the date modified.",
            "format": "date-time"
          }
        },
        "additionalProperties": true,
        "description": "Class FontFile."
      },
      "ForgotPasswordAction": {
        "enum": [
          "ContactAdmin",
          "PinCode",
          "InNetworkRequired"
        ],
        "type": "string"
      },
      "ForgotPasswordDto": {
        "required": [
          "EnteredUsername"
        ],
        "type": "object",
        "properties": {
          "EnteredUsername": {
            "type": "string",
            "description": "Gets or sets the entered username to have its password reset."
          }
        },
        "additionalProperties": true,
        "description": "Forgot Password request body DTO."
      },
      "ForgotPasswordPinDto": {
        "required": [
          "Pin"
        ],
        "type": "object",
        "properties": {
          "Pin": {
            "type": "string",
            "description": "Gets or sets the entered pin to have the password reset."
          }
        },
        "additionalProperties": true,
        "description": "Forgot Password Pin enter request body DTO."
      },
      "ForgotPasswordResult": {
        "type": "object",
        "properties": {
          "Action": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ForgotPasswordAction"
              }
            ],
            "description": "Gets or sets the action."
          },
          "PinFile": {
            "type": "string",
            "description": "Gets or sets the pin file.",
            "nullable": true
          },
          "PinExpirationDate": {
            "type": "string",
            "description": "Gets or sets the pin expiration date.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "GeneralCommand": {
        "type": "object",
        "properties": {
          "Name": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GeneralCommandType"
              }
            ],
            "description": "This exists simply to identify a set of known commands."
          },
          "ControllingUserId": {
            "type": "string",
            "format": "uuid"
          },
          "Arguments": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            }
          }
        },
        "additionalProperties": true
      },
      "GeneralCommandType": {
        "enum": [
          "MoveUp",
          "MoveDown",
          "MoveLeft",
          "MoveRight",
          "PageUp",
          "PageDown",
          "PreviousLetter",
          "NextLetter",
          "ToggleOsd",
          "ToggleContextMenu",
          "Select",
          "Back",
          "TakeScreenshot",
          "SendKey",
          "SendString",
          "GoHome",
          "GoToSettings",
          "VolumeUp",
          "VolumeDown",
          "Mute",
          "Unmute",
          "ToggleMute",
          "SetVolume",
          "SetAudioStreamIndex",
          "SetSubtitleStreamIndex",
          "ToggleFullscreen",
          "DisplayContent",
          "GoToSearch",
          "DisplayMessage",
          "SetRepeatMode",
          "ChannelUp",
          "ChannelDown",
          "Guide",
          "ToggleStats",
          "PlayMediaSource",
          "PlayTrailers",
          "SetShuffleQueue",
          "PlayState",
          "PlayNext",
          "ToggleOsdMenu",
          "Play",
          "SetMaxStreamingBitrate"
        ],
        "type": "string",
        "description": "This exists simply to identify a set of known commands."
      },
      "GetProgramsDto": {
        "type": "object",
        "properties": {
          "ChannelIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the channels to return guide information for."
          },
          "UserId": {
            "type": "string",
            "description": "Gets or sets optional. Filter by user id.",
            "format": "uuid"
          },
          "MinStartDate": {
            "type": "string",
            "description": "Gets or sets the minimum premiere start date.\r\nOptional.",
            "format": "date-time",
            "nullable": true
          },
          "HasAired": {
            "type": "boolean",
            "description": "Gets or sets filter by programs that have completed airing, or not.\r\nOptional.",
            "nullable": true
          },
          "IsAiring": {
            "type": "boolean",
            "description": "Gets or sets filter by programs that are currently airing, or not.\r\nOptional.",
            "nullable": true
          },
          "MaxStartDate": {
            "type": "string",
            "description": "Gets or sets the maximum premiere start date.\r\nOptional.",
            "format": "date-time",
            "nullable": true
          },
          "MinEndDate": {
            "type": "string",
            "description": "Gets or sets the minimum premiere end date.\r\nOptional.",
            "format": "date-time",
            "nullable": true
          },
          "MaxEndDate": {
            "type": "string",
            "description": "Gets or sets the maximum premiere end date.\r\nOptional.",
            "format": "date-time",
            "nullable": true
          },
          "IsMovie": {
            "type": "boolean",
            "description": "Gets or sets filter for movies.\r\nOptional.",
            "nullable": true
          },
          "IsSeries": {
            "type": "boolean",
            "description": "Gets or sets filter for series.\r\nOptional.",
            "nullable": true
          },
          "IsNews": {
            "type": "boolean",
            "description": "Gets or sets filter for news.\r\nOptional.",
            "nullable": true
          },
          "IsKids": {
            "type": "boolean",
            "description": "Gets or sets filter for kids.\r\nOptional.",
            "nullable": true
          },
          "IsSports": {
            "type": "boolean",
            "description": "Gets or sets filter for sports.\r\nOptional.",
            "nullable": true
          },
          "StartIndex": {
            "type": "integer",
            "description": "Gets or sets the record index to start at. All items with a lower index will be dropped from the results.\r\nOptional.",
            "format": "int32",
            "nullable": true
          },
          "Limit": {
            "type": "integer",
            "description": "Gets or sets the maximum number of records to return.\r\nOptional.",
            "format": "int32",
            "nullable": true
          },
          "SortBy": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets specify one or more sort orders, comma delimited. Options: Name, StartDate.\r\nOptional."
          },
          "SortOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SortOrder"
            },
            "description": "Gets or sets sort Order - Ascending,Descending."
          },
          "Genres": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the genres to return guide information for."
          },
          "GenreIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the genre ids to return guide information for."
          },
          "EnableImages": {
            "type": "boolean",
            "description": "Gets or sets include image information in output.\r\nOptional.",
            "nullable": true
          },
          "EnableTotalRecordCount": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether retrieve total record count."
          },
          "ImageTypeLimit": {
            "type": "integer",
            "description": "Gets or sets the max number of images to return, per image type.\r\nOptional.",
            "format": "int32",
            "nullable": true
          },
          "EnableImageTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageType"
            },
            "description": "Gets or sets the image types to include in the output.\r\nOptional."
          },
          "EnableUserData": {
            "type": "boolean",
            "description": "Gets or sets include user data.\r\nOptional.",
            "nullable": true
          },
          "SeriesTimerId": {
            "type": "string",
            "description": "Gets or sets filter by series timer id.\r\nOptional.",
            "nullable": true
          },
          "LibrarySeriesId": {
            "type": "string",
            "description": "Gets or sets filter by library series id.\r\nOptional.",
            "format": "uuid"
          },
          "Fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ItemFields"
            },
            "description": "Gets or sets specify additional fields of information to return in the output. This allows multiple, comma delimited. Options: Budget, Chapters, DateCreated, Genres, HomePageUrl, IndexOptions, MediaStreams, Overview, ParentId, Path, People, ProviderIds, PrimaryImageAspectRatio, Revenue, SortName, Studios, Taglines.\r\nOptional."
          }
        },
        "additionalProperties": true,
        "description": "Get programs dto."
      },
      "GroupInfoDto": {
        "type": "object",
        "properties": {
          "GroupId": {
            "type": "string",
            "description": "Gets the group identifier.",
            "format": "uuid"
          },
          "GroupName": {
            "type": "string",
            "description": "Gets the group name."
          },
          "State": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupStateType"
              }
            ],
            "description": "Gets the group state."
          },
          "Participants": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets the participants."
          },
          "LastUpdatedAt": {
            "type": "string",
            "description": "Gets the date when this DTO has been created.",
            "format": "date-time"
          }
        },
        "additionalProperties": true,
        "description": "Class GroupInfoDto."
      },
      "GroupQueueMode": {
        "enum": [
          "Queue",
          "QueueNext"
        ],
        "type": "string",
        "description": "Enum GroupQueueMode."
      },
      "GroupRepeatMode": {
        "enum": [
          "RepeatOne",
          "RepeatAll",
          "RepeatNone"
        ],
        "type": "string",
        "description": "Enum GroupRepeatMode."
      },
      "GroupShuffleMode": {
        "enum": [
          "Sorted",
          "Shuffle"
        ],
        "type": "string",
        "description": "Enum GroupShuffleMode."
      },
      "GroupStateType": {
        "enum": [
          "Idle",
          "Waiting",
          "Paused",
          "Playing"
        ],
        "type": "string",
        "description": "Enum GroupState."
      },
      "GroupUpdateType": {
        "enum": [
          "UserJoined",
          "UserLeft",
          "GroupJoined",
          "GroupLeft",
          "StateUpdate",
          "PlayQueue",
          "NotInGroup",
          "GroupDoesNotExist",
          "CreateGroupDenied",
          "JoinGroupDenied",
          "LibraryAccessDenied"
        ],
        "type": "string",
        "description": "Enum GroupUpdateType."
      },
      "GuideInfo": {
        "type": "object",
        "properties": {
          "StartDate": {
            "type": "string",
            "description": "Gets or sets the start date.",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "Gets or sets the end date.",
            "format": "date-time"
          }
        },
        "additionalProperties": true
      },
      "HardwareEncodingType": {
        "enum": [
          "AMF",
          "QSV",
          "NVENC",
          "V4L2M2M",
          "VAAPI",
          "VideoToolBox"
        ],
        "type": "string",
        "description": "Enum HardwareEncodingType."
      },
      "HeaderMatchType": {
        "enum": [
          "Equals",
          "Regex",
          "Substring"
        ],
        "type": "string"
      },
      "HttpHeaderInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "nullable": true
          },
          "Match": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HeaderMatchType"
              }
            ]
          }
        },
        "additionalProperties": true
      },
      "IgnoreWaitRequestDto": {
        "type": "object",
        "properties": {
          "IgnoreWait": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the client should be ignored."
          }
        },
        "additionalProperties": true,
        "description": "Class IgnoreWaitRequestDto."
      },
      "ImageByNameInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "Theme": {
            "type": "string",
            "description": "Gets or sets the theme.",
            "nullable": true
          },
          "Context": {
            "type": "string",
            "description": "Gets or sets the context.",
            "nullable": true
          },
          "FileLength": {
            "type": "integer",
            "description": "Gets or sets the length of the file.",
            "format": "int64"
          },
          "Format": {
            "type": "string",
            "description": "Gets or sets the format.",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "ImageFormat": {
        "enum": [
          "Bmp",
          "Gif",
          "Jpg",
          "Png",
          "Webp"
        ],
        "type": "string",
        "description": "Enum ImageOutputFormat."
      },
      "ImageInfo": {
        "type": "object",
        "properties": {
          "ImageType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageType"
              }
            ],
            "description": "Gets or sets the type of the image."
          },
          "ImageIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the image.",
            "format": "int32",
            "nullable": true
          },
          "ImageTag": {
            "type": "string",
            "description": "Gets or sets the image tag.",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "BlurHash": {
            "type": "string",
            "description": "Gets or sets the blurhash.",
            "nullable": true
          },
          "Height": {
            "type": "integer",
            "description": "Gets or sets the height.",
            "format": "int32",
            "nullable": true
          },
          "Width": {
            "type": "integer",
            "description": "Gets or sets the width.",
            "format": "int32",
            "nullable": true
          },
          "Size": {
            "type": "integer",
            "description": "Gets or sets the size.",
            "format": "int64"
          }
        },
        "additionalProperties": true,
        "description": "Class ImageInfo."
      },
      "ImageOption": {
        "type": "object",
        "properties": {
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageType"
              }
            ],
            "description": "Gets or sets the type."
          },
          "Limit": {
            "type": "integer",
            "description": "Gets or sets the limit.",
            "format": "int32"
          },
          "MinWidth": {
            "type": "integer",
            "description": "Gets or sets the minimum width.",
            "format": "int32"
          }
        },
        "additionalProperties": true
      },
      "ImageOrientation": {
        "enum": [
          "TopLeft",
          "TopRight",
          "BottomRight",
          "BottomLeft",
          "LeftTop",
          "RightTop",
          "RightBottom",
          "LeftBottom"
        ],
        "type": "string"
      },
      "ImageProviderInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets the name."
          },
          "SupportedImages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageType"
            },
            "description": "Gets the supported image types."
          }
        },
        "additionalProperties": true,
        "description": "Class ImageProviderInfo."
      },
      "ImageSavingConvention": {
        "enum": [
          "Legacy",
          "Compatible"
        ],
        "type": "string"
      },
      "ImageType": {
        "enum": [
          "Primary",
          "Art",
          "Backdrop",
          "Banner",
          "Logo",
          "Thumb",
          "Disc",
          "Box",
          "Screenshot",
          "Menu",
          "Chapter",
          "BoxRear",
          "Profile"
        ],
        "type": "string",
        "description": "Enum ImageType."
      },
      "InstallationInfo": {
        "type": "object",
        "properties": {
          "Guid": {
            "type": "string",
            "description": "Gets or sets the Id.",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "Version": {
            "type": "string",
            "description": "Gets or sets the version.",
            "nullable": true
          },
          "Changelog": {
            "type": "string",
            "description": "Gets or sets the changelog for this version.",
            "nullable": true
          },
          "SourceUrl": {
            "type": "string",
            "description": "Gets or sets the source URL.",
            "nullable": true
          },
          "Checksum": {
            "type": "string",
            "description": "Gets or sets a checksum for the binary.",
            "nullable": true
          },
          "PackageInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PackageInfo"
              }
            ],
            "description": "Gets or sets package information for the installation.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class InstallationInfo."
      },
      "IPlugin": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets the name of the plugin.",
            "nullable": true,
            "readOnly": true
          },
          "Description": {
            "type": "string",
            "description": "Gets the Description.",
            "nullable": true,
            "readOnly": true
          },
          "Id": {
            "type": "string",
            "description": "Gets the unique id.",
            "format": "uuid",
            "readOnly": true
          },
          "Version": {
            "type": "string",
            "description": "Gets the plugin version.",
            "nullable": true,
            "readOnly": true
          },
          "AssemblyFilePath": {
            "type": "string",
            "description": "Gets the path to the assembly file.",
            "nullable": true,
            "readOnly": true
          },
          "CanUninstall": {
            "type": "boolean",
            "description": "Gets a value indicating whether the plugin can be uninstalled.",
            "readOnly": true
          },
          "DataFolderPath": {
            "type": "string",
            "description": "Gets the full path to the data folder, where the plugin can store any miscellaneous files needed.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": true,
        "description": "Defines the MediaBrowser.Common.Plugins.IPlugin."
      },
      "IsoType": {
        "enum": [
          "Dvd",
          "BluRay"
        ],
        "type": "string",
        "description": "Enum IsoType."
      },
      "ItemCounts": {
        "type": "object",
        "properties": {
          "MovieCount": {
            "type": "integer",
            "description": "Gets or sets the movie count.",
            "format": "int32"
          },
          "SeriesCount": {
            "type": "integer",
            "description": "Gets or sets the series count.",
            "format": "int32"
          },
          "EpisodeCount": {
            "type": "integer",
            "description": "Gets or sets the episode count.",
            "format": "int32"
          },
          "ArtistCount": {
            "type": "integer",
            "description": "Gets or sets the artist count.",
            "format": "int32"
          },
          "ProgramCount": {
            "type": "integer",
            "description": "Gets or sets the program count.",
            "format": "int32"
          },
          "TrailerCount": {
            "type": "integer",
            "description": "Gets or sets the trailer count.",
            "format": "int32"
          },
          "SongCount": {
            "type": "integer",
            "description": "Gets or sets the song count.",
            "format": "int32"
          },
          "AlbumCount": {
            "type": "integer",
            "description": "Gets or sets the album count.",
            "format": "int32"
          },
          "MusicVideoCount": {
            "type": "integer",
            "description": "Gets or sets the music video count.",
            "format": "int32"
          },
          "BoxSetCount": {
            "type": "integer",
            "description": "Gets or sets the box set count.",
            "format": "int32"
          },
          "BookCount": {
            "type": "integer",
            "description": "Gets or sets the book count.",
            "format": "int32"
          },
          "ItemCount": {
            "type": "integer",
            "description": "Gets or sets the item count.",
            "format": "int32"
          }
        },
        "additionalProperties": true,
        "description": "Class LibrarySummary."
      },
      "ItemFields": {
        "enum": [
          "AirTime",
          "CanDelete",
          "CanDownload",
          "ChannelInfo",
          "Chapters",
          "ChildCount",
          "CumulativeRunTimeTicks",
          "CustomRating",
          "DateCreated",
          "DateLastMediaAdded",
          "DisplayPreferencesId",
          "Etag",
          "ExternalUrls",
          "Genres",
          "HomePageUrl",
          "ItemCounts",
          "MediaSourceCount",
          "MediaSources",
          "OriginalTitle",
          "Overview",
          "ParentId",
          "Path",
          "People",
          "PlayAccess",
          "ProductionLocations",
          "ProviderIds",
          "PrimaryImageAspectRatio",
          "RecursiveItemCount",
          "Settings",
          "ScreenshotImageTags",
          "SeriesPrimaryImage",
          "SeriesStudio",
          "SortName",
          "SpecialEpisodeNumbers",
          "Studios",
          "BasicSyncInfo",
          "SyncInfo",
          "Taglines",
          "Tags",
          "RemoteTrailers",
          "MediaStreams",
          "SeasonUserData",
          "ServiceName",
          "ThemeSongIds",
          "ThemeVideoIds",
          "ExternalEtag",
          "PresentationUniqueKey",
          "InheritedParentalRatingValue",
          "ExternalSeriesId",
          "SeriesPresentationUniqueKey",
          "DateLastRefreshed",
          "DateLastSaved",
          "RefreshState",
          "ChannelImage",
          "EnableMediaSourceDisplay",
          "Width",
          "Height",
          "ExtraIds",
          "LocalTrailerCount",
          "IsHD",
          "SpecialFeatureCount"
        ],
        "type": "string",
        "description": "Used to control the data that gets attached to DtoBaseItems."
      },
      "ItemFilter": {
        "enum": [
          "IsFolder",
          "IsNotFolder",
          "IsUnplayed",
          "IsPlayed",
          "IsFavorite",
          "IsResumable",
          "Likes",
          "Dislikes",
          "IsFavoriteOrLikes"
        ],
        "type": "string",
        "description": "Enum ItemFilter."
      },
      "JoinGroupRequestDto": {
        "type": "object",
        "properties": {
          "GroupId": {
            "type": "string",
            "description": "Gets or sets the group identifier.",
            "format": "uuid"
          }
        },
        "additionalProperties": true,
        "description": "Class JoinGroupRequestDto."
      },
      "KeepUntil": {
        "enum": [
          "UntilDeleted",
          "UntilSpaceNeeded",
          "UntilWatched",
          "UntilDate"
        ],
        "type": "string"
      },
      "LibraryOptionInfoDto": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets name.",
            "nullable": true
          },
          "DefaultEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether default enabled."
          }
        },
        "additionalProperties": true,
        "description": "Library option info dto."
      },
      "LibraryOptions": {
        "type": "object",
        "properties": {
          "EnablePhotos": {
            "type": "boolean"
          },
          "EnableRealtimeMonitor": {
            "type": "boolean"
          },
          "EnableChapterImageExtraction": {
            "type": "boolean"
          },
          "ExtractChapterImagesDuringLibraryScan": {
            "type": "boolean"
          },
          "PathInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaPathInfo"
            }
          },
          "SaveLocalMetadata": {
            "type": "boolean"
          },
          "EnableInternetProviders": {
            "type": "boolean",
            "deprecated": true
          },
          "EnableAutomaticSeriesGrouping": {
            "type": "boolean"
          },
          "EnableEmbeddedTitles": {
            "type": "boolean"
          },
          "EnableEmbeddedEpisodeInfos": {
            "type": "boolean"
          },
          "AutomaticRefreshIntervalDays": {
            "type": "integer",
            "format": "int32"
          },
          "PreferredMetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the preferred metadata language.",
            "nullable": true
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code.",
            "nullable": true
          },
          "SeasonZeroDisplayName": {
            "type": "string"
          },
          "MetadataSavers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "DisabledLocalMetadataReaders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "LocalMetadataReaderOrder": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "DisabledSubtitleFetchers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "SubtitleFetcherOrder": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "SkipSubtitlesIfEmbeddedSubtitlesPresent": {
            "type": "boolean"
          },
          "SkipSubtitlesIfAudioTrackMatches": {
            "type": "boolean"
          },
          "SubtitleDownloadLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "RequirePerfectSubtitleMatch": {
            "type": "boolean"
          },
          "SaveSubtitlesWithMedia": {
            "type": "boolean"
          },
          "AutomaticallyAddToCollection": {
            "type": "boolean"
          },
          "AllowEmbeddedSubtitles": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EmbeddedSubtitleOptions"
              }
            ],
            "description": "An enum representing the options to disable embedded subs."
          },
          "TypeOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeOptions"
            }
          }
        },
        "additionalProperties": true
      },
      "LibraryOptionsResultDto": {
        "type": "object",
        "properties": {
          "MetadataSavers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryOptionInfoDto"
            },
            "description": "Gets or sets the metadata savers."
          },
          "MetadataReaders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryOptionInfoDto"
            },
            "description": "Gets or sets the metadata readers."
          },
          "SubtitleFetchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryOptionInfoDto"
            },
            "description": "Gets or sets the subtitle fetchers."
          },
          "TypeOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryTypeOptionsDto"
            },
            "description": "Gets or sets the type options."
          }
        },
        "additionalProperties": true,
        "description": "Library options result dto."
      },
      "LibraryTypeOptionsDto": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "Gets or sets the type.",
            "nullable": true
          },
          "MetadataFetchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryOptionInfoDto"
            },
            "description": "Gets or sets the metadata fetchers."
          },
          "ImageFetchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LibraryOptionInfoDto"
            },
            "description": "Gets or sets the image fetchers."
          },
          "SupportedImageTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageType"
            },
            "description": "Gets or sets the supported image types."
          },
          "DefaultImageOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageOption"
            },
            "description": "Gets or sets the default image options."
          }
        },
        "additionalProperties": true,
        "description": "Library type options dto."
      },
      "LibraryUpdateInfo": {
        "type": "object",
        "properties": {
          "FoldersAddedTo": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the folders added to."
          },
          "FoldersRemovedFrom": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the folders removed from."
          },
          "ItemsAdded": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the items added."
          },
          "ItemsRemoved": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the items removed."
          },
          "ItemsUpdated": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the items updated."
          },
          "CollectionFolders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "IsEmpty": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": true,
        "description": "Class LibraryUpdateInfo."
      },
      "ListingsProviderInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "Username": {
            "type": "string",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "nullable": true
          },
          "ListingsId": {
            "type": "string",
            "nullable": true
          },
          "ZipCode": {
            "type": "string",
            "nullable": true
          },
          "Country": {
            "type": "string",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "nullable": true
          },
          "EnabledTuners": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "EnableAllTuners": {
            "type": "boolean"
          },
          "NewsCategories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "SportsCategories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "KidsCategories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "MovieCategories": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ChannelMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValuePair"
            },
            "nullable": true
          },
          "MoviePrefix": {
            "type": "string",
            "nullable": true
          },
          "PreferredLanguage": {
            "type": "string",
            "nullable": true
          },
          "UserAgent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "LiveStreamResponse": {
        "type": "object",
        "properties": {
          "MediaSource": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaSourceInfo"
              }
            ]
          }
        },
        "additionalProperties": true
      },
      "LiveTvInfo": {
        "type": "object",
        "properties": {
          "Services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LiveTvServiceInfo"
            },
            "description": "Gets or sets the services."
          },
          "IsEnabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is enabled."
          },
          "EnabledUsers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the enabled users."
          }
        },
        "additionalProperties": true
      },
      "LiveTvOptions": {
        "type": "object",
        "properties": {
          "GuideDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "RecordingPath": {
            "type": "string",
            "nullable": true
          },
          "MovieRecordingPath": {
            "type": "string",
            "nullable": true
          },
          "SeriesRecordingPath": {
            "type": "string",
            "nullable": true
          },
          "EnableRecordingSubfolders": {
            "type": "boolean"
          },
          "EnableOriginalAudioWithEncodedRecordings": {
            "type": "boolean"
          },
          "TunerHosts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TunerHostInfo"
            },
            "nullable": true
          },
          "ListingProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ListingsProviderInfo"
            },
            "nullable": true
          },
          "PrePaddingSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "PostPaddingSeconds": {
            "type": "integer",
            "format": "int32"
          },
          "MediaLocationsCreated": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "RecordingPostProcessor": {
            "type": "string",
            "nullable": true
          },
          "RecordingPostProcessorArguments": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "LiveTvServiceInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "HomePageUrl": {
            "type": "string",
            "description": "Gets or sets the home page URL.",
            "nullable": true
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LiveTvServiceStatus"
              }
            ],
            "description": "Gets or sets the status."
          },
          "StatusMessage": {
            "type": "string",
            "description": "Gets or sets the status message.",
            "nullable": true
          },
          "Version": {
            "type": "string",
            "description": "Gets or sets the version.",
            "nullable": true
          },
          "HasUpdateAvailable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance has update available."
          },
          "IsVisible": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is visible."
          },
          "Tuners": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class ServiceInfo."
      },
      "LiveTvServiceStatus": {
        "enum": [
          "Ok",
          "Unavailable"
        ],
        "type": "string"
      },
      "LocalizationOption": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "LocationType": {
        "enum": [
          "FileSystem",
          "Remote",
          "Virtual",
          "Offline"
        ],
        "type": "string",
        "description": "Enum LocationType."
      },
      "LogFile": {
        "type": "object",
        "properties": {
          "DateCreated": {
            "type": "string",
            "description": "Gets or sets the date created.",
            "format": "date-time"
          },
          "DateModified": {
            "type": "string",
            "description": "Gets or sets the date modified.",
            "format": "date-time"
          },
          "Size": {
            "type": "integer",
            "description": "Gets or sets the size.",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "LogLevel": {
        "enum": [
          "Trace",
          "Debug",
          "Information",
          "Warning",
          "Error",
          "Critical",
          "None"
        ],
        "type": "string"
      },
      "MediaAttachment": {
        "type": "object",
        "properties": {
          "Codec": {
            "type": "string",
            "description": "Gets or sets the codec.",
            "nullable": true
          },
          "CodecTag": {
            "type": "string",
            "description": "Gets or sets the codec tag.",
            "nullable": true
          },
          "Comment": {
            "type": "string",
            "description": "Gets or sets the comment.",
            "nullable": true
          },
          "Index": {
            "type": "integer",
            "description": "Gets or sets the index.",
            "format": "int32"
          },
          "FileName": {
            "type": "string",
            "description": "Gets or sets the filename.",
            "nullable": true
          },
          "MimeType": {
            "type": "string",
            "description": "Gets or sets the MIME type.",
            "nullable": true
          },
          "DeliveryUrl": {
            "type": "string",
            "description": "Gets or sets the delivery URL.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class MediaAttachment."
      },
      "MediaEncoderPathDto": {
        "type": "object",
        "properties": {
          "Path": {
            "type": "string",
            "description": "Gets or sets media encoder path."
          },
          "PathType": {
            "type": "string",
            "description": "Gets or sets media encoder path type."
          }
        },
        "additionalProperties": true,
        "description": "Media Encoder Path Dto."
      },
      "MediaPathDto": {
        "required": [
          "Name"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name of the library."
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path to add.",
            "nullable": true
          },
          "PathInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaPathInfo"
              }
            ],
            "description": "Gets or sets the path info.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Media Path dto."
      },
      "MediaPathInfo": {
        "type": "object",
        "properties": {
          "Path": {
            "type": "string"
          },
          "NetworkPath": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "MediaProtocol": {
        "enum": [
          "File",
          "Http",
          "Rtmp",
          "Rtsp",
          "Udp",
          "Rtp",
          "Ftp"
        ],
        "type": "string"
      },
      "MediaSourceInfo": {
        "type": "object",
        "properties": {
          "Protocol": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaProtocol"
              }
            ]
          },
          "Id": {
            "type": "string",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "nullable": true
          },
          "EncoderPath": {
            "type": "string",
            "nullable": true
          },
          "EncoderProtocol": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaProtocol"
              }
            ],
            "nullable": true
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaSourceType"
              }
            ]
          },
          "Container": {
            "type": "string",
            "nullable": true
          },
          "Size": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "IsRemote": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the media is remote.\r\nDifferentiate internet url vs local network."
          },
          "ETag": {
            "type": "string",
            "nullable": true
          },
          "RunTimeTicks": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ReadAtNativeFramerate": {
            "type": "boolean"
          },
          "IgnoreDts": {
            "type": "boolean"
          },
          "IgnoreIndex": {
            "type": "boolean"
          },
          "GenPtsInput": {
            "type": "boolean"
          },
          "SupportsTranscoding": {
            "type": "boolean"
          },
          "SupportsDirectStream": {
            "type": "boolean"
          },
          "SupportsDirectPlay": {
            "type": "boolean"
          },
          "IsInfiniteStream": {
            "type": "boolean"
          },
          "RequiresOpening": {
            "type": "boolean"
          },
          "OpenToken": {
            "type": "string",
            "nullable": true
          },
          "RequiresClosing": {
            "type": "boolean"
          },
          "LiveStreamId": {
            "type": "string",
            "nullable": true
          },
          "BufferMs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "RequiresLooping": {
            "type": "boolean"
          },
          "SupportsProbing": {
            "type": "boolean"
          },
          "VideoType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/VideoType"
              }
            ],
            "nullable": true
          },
          "IsoType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/IsoType"
              }
            ],
            "nullable": true
          },
          "Video3DFormat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Video3DFormat"
              }
            ],
            "nullable": true
          },
          "MediaStreams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaStream"
            },
            "nullable": true
          },
          "MediaAttachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaAttachment"
            },
            "nullable": true
          },
          "Formats": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Bitrate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Timestamp": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TransportStreamTimestamp"
              }
            ],
            "nullable": true
          },
          "RequiredHttpHeaders": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "nullable": true
          },
          "TranscodingUrl": {
            "type": "string",
            "nullable": true
          },
          "TranscodingSubProtocol": {
            "type": "string",
            "nullable": true
          },
          "TranscodingContainer": {
            "type": "string",
            "nullable": true
          },
          "AnalyzeDurationMs": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DefaultAudioStreamIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "DefaultSubtitleStreamIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "MediaSourceType": {
        "enum": [
          "Default",
          "Grouping",
          "Placeholder"
        ],
        "type": "string"
      },
      "MediaStream": {
        "type": "object",
        "properties": {
          "Codec": {
            "type": "string",
            "description": "Gets or sets the codec.",
            "nullable": true
          },
          "CodecTag": {
            "type": "string",
            "description": "Gets or sets the codec tag.",
            "nullable": true
          },
          "Language": {
            "type": "string",
            "description": "Gets or sets the language.",
            "nullable": true
          },
          "ColorRange": {
            "type": "string",
            "description": "Gets or sets the color range.",
            "nullable": true
          },
          "ColorSpace": {
            "type": "string",
            "description": "Gets or sets the color space.",
            "nullable": true
          },
          "ColorTransfer": {
            "type": "string",
            "description": "Gets or sets the color transfer.",
            "nullable": true
          },
          "ColorPrimaries": {
            "type": "string",
            "description": "Gets or sets the color primaries.",
            "nullable": true
          },
          "DvVersionMajor": {
            "type": "integer",
            "description": "Gets or sets the Dolby Vision version major.",
            "format": "int32",
            "nullable": true
          },
          "DvVersionMinor": {
            "type": "integer",
            "description": "Gets or sets the Dolby Vision version minor.",
            "format": "int32",
            "nullable": true
          },
          "DvProfile": {
            "type": "integer",
            "description": "Gets or sets the Dolby Vision profile.",
            "format": "int32",
            "nullable": true
          },
          "DvLevel": {
            "type": "integer",
            "description": "Gets or sets the Dolby Vision level.",
            "format": "int32",
            "nullable": true
          },
          "RpuPresentFlag": {
            "type": "integer",
            "description": "Gets or sets the Dolby Vision rpu present flag.",
            "format": "int32",
            "nullable": true
          },
          "ElPresentFlag": {
            "type": "integer",
            "description": "Gets or sets the Dolby Vision el present flag.",
            "format": "int32",
            "nullable": true
          },
          "BlPresentFlag": {
            "type": "integer",
            "description": "Gets or sets the Dolby Vision bl present flag.",
            "format": "int32",
            "nullable": true
          },
          "DvBlSignalCompatibilityId": {
            "type": "integer",
            "description": "Gets or sets the Dolby Vision bl signal compatibility id.",
            "format": "int32",
            "nullable": true
          },
          "Comment": {
            "type": "string",
            "description": "Gets or sets the comment.",
            "nullable": true
          },
          "TimeBase": {
            "type": "string",
            "description": "Gets or sets the time base.",
            "nullable": true
          },
          "CodecTimeBase": {
            "type": "string",
            "description": "Gets or sets the codec time base.",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "description": "Gets or sets the title.",
            "nullable": true
          },
          "VideoRange": {
            "type": "string",
            "description": "Gets the video range.",
            "nullable": true,
            "readOnly": true
          },
          "VideoRangeType": {
            "type": "string",
            "description": "Gets the video range type.",
            "nullable": true,
            "readOnly": true
          },
          "VideoDoViTitle": {
            "type": "string",
            "description": "Gets the video dovi title.",
            "nullable": true,
            "readOnly": true
          },
          "LocalizedUndefined": {
            "type": "string",
            "nullable": true
          },
          "LocalizedDefault": {
            "type": "string",
            "nullable": true
          },
          "LocalizedForced": {
            "type": "string",
            "nullable": true
          },
          "LocalizedExternal": {
            "type": "string",
            "nullable": true
          },
          "DisplayTitle": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "NalLengthSize": {
            "type": "string",
            "nullable": true
          },
          "IsInterlaced": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is interlaced."
          },
          "IsAVC": {
            "type": "boolean",
            "nullable": true
          },
          "ChannelLayout": {
            "type": "string",
            "description": "Gets or sets the channel layout.",
            "nullable": true
          },
          "BitRate": {
            "type": "integer",
            "description": "Gets or sets the bit rate.",
            "format": "int32",
            "nullable": true
          },
          "BitDepth": {
            "type": "integer",
            "description": "Gets or sets the bit depth.",
            "format": "int32",
            "nullable": true
          },
          "RefFrames": {
            "type": "integer",
            "description": "Gets or sets the reference frames.",
            "format": "int32",
            "nullable": true
          },
          "PacketLength": {
            "type": "integer",
            "description": "Gets or sets the length of the packet.",
            "format": "int32",
            "nullable": true
          },
          "Channels": {
            "type": "integer",
            "description": "Gets or sets the channels.",
            "format": "int32",
            "nullable": true
          },
          "SampleRate": {
            "type": "integer",
            "description": "Gets or sets the sample rate.",
            "format": "int32",
            "nullable": true
          },
          "IsDefault": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is default."
          },
          "IsForced": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is forced."
          },
          "Height": {
            "type": "integer",
            "description": "Gets or sets the height.",
            "format": "int32",
            "nullable": true
          },
          "Width": {
            "type": "integer",
            "description": "Gets or sets the width.",
            "format": "int32",
            "nullable": true
          },
          "AverageFrameRate": {
            "type": "number",
            "description": "Gets or sets the average frame rate.",
            "format": "float",
            "nullable": true
          },
          "RealFrameRate": {
            "type": "number",
            "description": "Gets or sets the real frame rate.",
            "format": "float",
            "nullable": true
          },
          "Profile": {
            "type": "string",
            "description": "Gets or sets the profile.",
            "nullable": true
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaStreamType"
              }
            ],
            "description": "Gets or sets the type."
          },
          "AspectRatio": {
            "type": "string",
            "description": "Gets or sets the aspect ratio.",
            "nullable": true
          },
          "Index": {
            "type": "integer",
            "description": "Gets or sets the index.",
            "format": "int32"
          },
          "Score": {
            "type": "integer",
            "description": "Gets or sets the score.",
            "format": "int32",
            "nullable": true
          },
          "IsExternal": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is external."
          },
          "DeliveryMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubtitleDeliveryMethod"
              }
            ],
            "description": "Gets or sets the method.",
            "nullable": true
          },
          "DeliveryUrl": {
            "type": "string",
            "description": "Gets or sets the delivery URL.",
            "nullable": true
          },
          "IsExternalUrl": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is external URL.",
            "nullable": true
          },
          "IsTextSubtitleStream": {
            "type": "boolean",
            "readOnly": true
          },
          "SupportsExternalStream": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [supports external stream]."
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the filename.",
            "nullable": true
          },
          "PixelFormat": {
            "type": "string",
            "description": "Gets or sets the pixel format.",
            "nullable": true
          },
          "Level": {
            "type": "number",
            "description": "Gets or sets the level.",
            "format": "double",
            "nullable": true
          },
          "IsAnamorphic": {
            "type": "boolean",
            "description": "Gets or sets whether this instance is anamorphic.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class MediaStream."
      },
      "MediaStreamType": {
        "enum": [
          "Audio",
          "Video",
          "Subtitle",
          "EmbeddedImage",
          "Data"
        ],
        "type": "string",
        "description": "Enum MediaStreamType."
      },
      "MediaUpdateInfoDto": {
        "type": "object",
        "properties": {
          "Updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaUpdateInfoPathDto"
            },
            "description": "Gets or sets the list of updates."
          }
        },
        "additionalProperties": true,
        "description": "Media Update Info Dto."
      },
      "MediaUpdateInfoPathDto": {
        "type": "object",
        "properties": {
          "Path": {
            "type": "string",
            "description": "Gets or sets media path.",
            "nullable": true
          },
          "UpdateType": {
            "type": "string",
            "description": "Gets or sets media update type.\r\nCreated, Modified, Deleted.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "The media update info path."
      },
      "MediaUrl": {
        "type": "object",
        "properties": {
          "Url": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "MessageCommand": {
        "required": [
          "Text"
        ],
        "type": "object",
        "properties": {
          "Header": {
            "type": "string",
            "nullable": true
          },
          "Text": {
            "type": "string"
          },
          "TimeoutMs": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "MetadataConfiguration": {
        "type": "object",
        "properties": {
          "UseFileCreationTimeForDateAdded": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "MetadataEditorInfo": {
        "type": "object",
        "properties": {
          "ParentalRatingOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParentalRating"
            }
          },
          "Countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CountryInfo"
            }
          },
          "Cultures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CultureDto"
            }
          },
          "ExternalIdInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalIdInfo"
            }
          },
          "ContentType": {
            "type": "string",
            "nullable": true
          },
          "ContentTypeOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValuePair"
            }
          }
        },
        "additionalProperties": true
      },
      "MetadataField": {
        "enum": [
          "Cast",
          "Genres",
          "ProductionLocations",
          "Studios",
          "Tags",
          "Name",
          "Overview",
          "Runtime",
          "OfficialRating"
        ],
        "type": "string",
        "description": "Enum MetadataFields."
      },
      "MetadataOptions": {
        "type": "object",
        "properties": {
          "ItemType": {
            "type": "string",
            "nullable": true
          },
          "DisabledMetadataSavers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "LocalMetadataReaderOrder": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "DisabledMetadataFetchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "MetadataFetcherOrder": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "DisabledImageFetchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ImageFetcherOrder": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class MetadataOptions."
      },
      "MetadataRefreshMode": {
        "enum": [
          "None",
          "ValidationOnly",
          "Default",
          "FullRefresh"
        ],
        "type": "string"
      },
      "MovePlaylistItemRequestDto": {
        "type": "object",
        "properties": {
          "PlaylistItemId": {
            "type": "string",
            "description": "Gets or sets the playlist identifier of the item.",
            "format": "uuid"
          },
          "NewIndex": {
            "type": "integer",
            "description": "Gets or sets the new position.",
            "format": "int32"
          }
        },
        "additionalProperties": true,
        "description": "Class MovePlaylistItemRequestDto."
      },
      "MovieInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "OriginalTitle": {
            "type": "string",
            "description": "Gets or sets the original title.",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "MetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the metadata language.",
            "nullable": true
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code.",
            "nullable": true
          },
          "ProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the provider ids.",
            "nullable": true
          },
          "Year": {
            "type": "integer",
            "description": "Gets or sets the year.",
            "format": "int32",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PremiereDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsAutomated": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "MovieInfoRemoteSearchQuery": {
        "type": "object",
        "properties": {
          "SearchInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MovieInfo"
              }
            ],
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "format": "uuid"
          },
          "SearchProviderName": {
            "type": "string",
            "description": "Gets or sets the provider name to search within if set.",
            "nullable": true
          },
          "IncludeDisabledProviders": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether disabled providers should be included."
          }
        },
        "additionalProperties": true
      },
      "MusicVideoInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "OriginalTitle": {
            "type": "string",
            "description": "Gets or sets the original title.",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "MetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the metadata language.",
            "nullable": true
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code.",
            "nullable": true
          },
          "ProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the provider ids.",
            "nullable": true
          },
          "Year": {
            "type": "integer",
            "description": "Gets or sets the year.",
            "format": "int32",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PremiereDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsAutomated": {
            "type": "boolean"
          },
          "Artists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "MusicVideoInfoRemoteSearchQuery": {
        "type": "object",
        "properties": {
          "SearchInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MusicVideoInfo"
              }
            ],
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "format": "uuid"
          },
          "SearchProviderName": {
            "type": "string",
            "description": "Gets or sets the provider name to search within if set.",
            "nullable": true
          },
          "IncludeDisabledProviders": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether disabled providers should be included."
          }
        },
        "additionalProperties": true
      },
      "NameGuidPair": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": true
      },
      "NameIdPair": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the identifier.",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "NameValuePair": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "description": "Gets or sets the value.",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "NetworkConfiguration": {
        "type": "object",
        "properties": {
          "RequireHttps": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the server should force connections over HTTPS."
          },
          "CertificatePath": {
            "type": "string",
            "description": "Gets or sets the filesystem path of an X.509 certificate to use for SSL."
          },
          "CertificatePassword": {
            "type": "string",
            "description": "Gets or sets the password required to access the X.509 certificate data in the file specified by Jellyfin.Networking.Configuration.NetworkConfiguration.CertificatePath."
          },
          "BaseUrl": {
            "type": "string",
            "description": "Gets or sets a value used to specify the URL prefix that your Jellyfin instance can be accessed at."
          },
          "PublicHttpsPort": {
            "type": "integer",
            "description": "Gets or sets the public HTTPS port.",
            "format": "int32"
          },
          "HttpServerPortNumber": {
            "type": "integer",
            "description": "Gets or sets the HTTP server port number.",
            "format": "int32"
          },
          "HttpsPortNumber": {
            "type": "integer",
            "description": "Gets or sets the HTTPS server port number.",
            "format": "int32"
          },
          "EnableHttps": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to use HTTPS."
          },
          "PublicPort": {
            "type": "integer",
            "description": "Gets or sets the public mapped port.",
            "format": "int32"
          },
          "UPnPCreateHttpPortMap": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the http port should be mapped as part of UPnP automatic port forwarding."
          },
          "UDPPortRange": {
            "type": "string",
            "description": "Gets or sets the UDPPortRange."
          },
          "EnableIPV6": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether gets or sets IPV6 capability."
          },
          "EnableIPV4": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether gets or sets IPV4 capability."
          },
          "EnableSSDPTracing": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether detailed SSDP logs are sent to the console/log.\r\n\"Emby.Dlna\": \"Debug\" must be set in logging.default.json for this property to have any effect."
          },
          "SSDPTracingFilter": {
            "type": "string",
            "description": "Gets or sets the SSDPTracingFilter\r\nGets or sets a value indicating whether an IP address is to be used to filter the detailed ssdp logs that are being sent to the console/log.\r\nIf the setting \"Emby.Dlna\": \"Debug\" msut be set in logging.default.json for this property to work."
          },
          "UDPSendCount": {
            "type": "integer",
            "description": "Gets or sets the number of times SSDP UDP messages are sent.",
            "format": "int32"
          },
          "UDPSendDelay": {
            "type": "integer",
            "description": "Gets or sets the delay between each groups of SSDP messages (in ms).",
            "format": "int32"
          },
          "IgnoreVirtualInterfaces": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether address names that match Jellyfin.Networking.Configuration.NetworkConfiguration.VirtualInterfaceNames should be Ignore for the purposes of binding."
          },
          "VirtualInterfaceNames": {
            "type": "string",
            "description": "Gets or sets a value indicating the interfaces that should be ignored. The list can be comma separated. <seealso cref=\"P:Jellyfin.Networking.Configuration.NetworkConfiguration.IgnoreVirtualInterfaces\" />."
          },
          "GatewayMonitorPeriod": {
            "type": "integer",
            "description": "Gets or sets the time (in seconds) between the pings of SSDP gateway monitor.",
            "format": "int32"
          },
          "EnableMultiSocketBinding": {
            "type": "boolean",
            "description": "Gets a value indicating whether multi-socket binding is available.",
            "readOnly": true
          },
          "TrustAllIP6Interfaces": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether all IPv6 interfaces should be treated as on the internal network.\r\nDepending on the address range implemented ULA ranges might not be used."
          },
          "HDHomerunPortRange": {
            "type": "string",
            "description": "Gets or sets the ports that HDHomerun uses."
          },
          "PublishedServerUriBySubnet": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the PublishedServerUriBySubnet\r\nGets or sets PublishedServerUri to advertise for specific subnets."
          },
          "AutoDiscoveryTracing": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether Autodiscovery tracing is enabled."
          },
          "AutoDiscovery": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether Autodiscovery is enabled."
          },
          "RemoteIPFilter": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the filter for remote IP connectivity. Used in conjuntion with <seealso cref=\"P:Jellyfin.Networking.Configuration.NetworkConfiguration.IsRemoteIPFilterBlacklist\" />."
          },
          "IsRemoteIPFilterBlacklist": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether <seealso cref=\"P:Jellyfin.Networking.Configuration.NetworkConfiguration.RemoteIPFilter\" /> contains a blacklist or a whitelist. Default is a whitelist."
          },
          "EnableUPnP": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to enable automatic port forwarding."
          },
          "EnableRemoteAccess": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether access outside of the LAN is permitted."
          },
          "LocalNetworkSubnets": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the subnets that are deemed to make up the LAN."
          },
          "LocalNetworkAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the interface addresses which Jellyfin will bind to. If empty, all interfaces will be used."
          },
          "KnownProxies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the known proxies. If the proxy is a network, it's added to the KnownNetworks."
          },
          "EnablePublishedServerUriByRequest": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the published server uri is based on information in HTTP requests."
          }
        },
        "additionalProperties": true,
        "description": "Defines the Jellyfin.Networking.Configuration.NetworkConfiguration."
      },
      "NewGroupRequestDto": {
        "type": "object",
        "properties": {
          "GroupName": {
            "type": "string",
            "description": "Gets or sets the group name."
          }
        },
        "additionalProperties": true,
        "description": "Class NewGroupRequestDto."
      },
      "NextItemRequestDto": {
        "type": "object",
        "properties": {
          "PlaylistItemId": {
            "type": "string",
            "description": "Gets or sets the playing item identifier.",
            "format": "uuid"
          }
        },
        "additionalProperties": true,
        "description": "Class NextItemRequestDto."
      },
      "NotificationDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets the notification ID. Defaults to an empty string."
          },
          "UserId": {
            "type": "string",
            "description": "Gets or sets the notification's user ID. Defaults to an empty string."
          },
          "Date": {
            "type": "string",
            "description": "Gets or sets the notification date.",
            "format": "date-time"
          },
          "IsRead": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the notification has been read. Defaults to false."
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets the notification's name. Defaults to an empty string."
          },
          "Description": {
            "type": "string",
            "description": "Gets or sets the notification's description. Defaults to an empty string."
          },
          "Url": {
            "type": "string",
            "description": "Gets or sets the notification's URL. Defaults to an empty string."
          },
          "Level": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationLevel"
              }
            ],
            "description": "Gets or sets the notification level."
          }
        },
        "additionalProperties": true,
        "description": "The notification DTO."
      },
      "NotificationLevel": {
        "enum": [
          "Normal",
          "Warning",
          "Error"
        ],
        "type": "string"
      },
      "NotificationOption": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "nullable": true
          },
          "DisabledMonitorUsers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets user Ids to not monitor (it's opt out)."
          },
          "SendToUsers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets user Ids to send to (if SendToUserMode == Custom)."
          },
          "Enabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this MediaBrowser.Model.Notifications.NotificationOption is enabled."
          },
          "DisabledServices": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the disabled services."
          },
          "SendToUserMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SendToUserType"
              }
            ],
            "description": "Gets or sets the send to user mode."
          }
        },
        "additionalProperties": true
      },
      "NotificationOptions": {
        "type": "object",
        "properties": {
          "Options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "NotificationResultDto": {
        "type": "object",
        "properties": {
          "Notifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NotificationDto"
            },
            "description": "Gets or sets the current page of notifications."
          },
          "TotalRecordCount": {
            "type": "integer",
            "description": "Gets or sets the total number of notifications.",
            "format": "int32"
          }
        },
        "additionalProperties": true,
        "description": "A list of notifications with the total record count for pagination."
      },
      "NotificationsSummaryDto": {
        "type": "object",
        "properties": {
          "UnreadCount": {
            "type": "integer",
            "description": "Gets or sets the number of unread notifications.",
            "format": "int32"
          },
          "MaxUnreadNotificationLevel": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationLevel"
              }
            ],
            "description": "Gets or sets the maximum unread notification level.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "The notification summary DTO."
      },
      "NotificationTypeInfo": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean"
          },
          "Category": {
            "type": "string",
            "nullable": true
          },
          "IsBasedOnUserEvent": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "ObjectGroupUpdate": {
        "type": "object",
        "properties": {
          "GroupId": {
            "type": "string",
            "description": "Gets the group identifier.",
            "format": "uuid"
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupUpdateType"
              }
            ],
            "description": "Gets the update type."
          },
          "Data": {
            "description": "Gets the update data."
          }
        },
        "additionalProperties": true,
        "description": "Class GroupUpdate."
      },
      "OpenLiveStreamDto": {
        "type": "object",
        "properties": {
          "OpenToken": {
            "type": "string",
            "description": "Gets or sets the open token.",
            "nullable": true
          },
          "UserId": {
            "type": "string",
            "description": "Gets or sets the user id.",
            "format": "uuid",
            "nullable": true
          },
          "PlaySessionId": {
            "type": "string",
            "description": "Gets or sets the play session id.",
            "nullable": true
          },
          "MaxStreamingBitrate": {
            "type": "integer",
            "description": "Gets or sets the max streaming bitrate.",
            "format": "int32",
            "nullable": true
          },
          "StartTimeTicks": {
            "type": "integer",
            "description": "Gets or sets the start time in ticks.",
            "format": "int64",
            "nullable": true
          },
          "AudioStreamIndex": {
            "type": "integer",
            "description": "Gets or sets the audio stream index.",
            "format": "int32",
            "nullable": true
          },
          "SubtitleStreamIndex": {
            "type": "integer",
            "description": "Gets or sets the subtitle stream index.",
            "format": "int32",
            "nullable": true
          },
          "MaxAudioChannels": {
            "type": "integer",
            "description": "Gets or sets the max audio channels.",
            "format": "int32",
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "description": "Gets or sets the item id.",
            "format": "uuid",
            "nullable": true
          },
          "EnableDirectPlay": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to enable direct play.",
            "nullable": true
          },
          "EnableDirectStream": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to enale direct stream.",
            "nullable": true
          },
          "DeviceProfile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeviceProfile"
              }
            ],
            "description": "A MediaBrowser.Model.Dlna.DeviceProfile represents a set of metadata which determines which content a certain device is able to play.\r\n<br />\r\nSpecifically, it defines the supported <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.ContainerProfiles\">containers</see> and\r\n<see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.CodecProfiles\">codecs</see> (video and/or audio, including codec profiles and levels)\r\nthe device is able to direct play (without transcoding or remuxing),\r\nas well as which <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.TranscodingProfiles\">containers/codecs to transcode to</see> in case it isn't.",
            "nullable": true
          },
          "DirectPlayProtocols": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaProtocol"
            },
            "description": "Gets or sets the device play protocols."
          }
        },
        "additionalProperties": true,
        "description": "Open live stream dto."
      },
      "PackageInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Gets or sets the name."
          },
          "description": {
            "type": "string",
            "description": "Gets or sets a long description of the plugin containing features or helpful explanations."
          },
          "overview": {
            "type": "string",
            "description": "Gets or sets a short overview of what the plugin does."
          },
          "owner": {
            "type": "string",
            "description": "Gets or sets the owner."
          },
          "category": {
            "type": "string",
            "description": "Gets or sets the category."
          },
          "guid": {
            "type": "string",
            "description": "Gets or sets the guid of the assembly associated with this plugin.\r\nThis is used to identify the proper item for automatic updates.",
            "format": "uuid"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VersionInfo"
            },
            "description": "Gets or sets the versions."
          },
          "imageUrl": {
            "type": "string",
            "description": "Gets or sets the image url for the package.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class PackageInfo."
      },
      "ParentalRating": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "Value": {
            "type": "integer",
            "description": "Gets or sets the value.",
            "format": "int32"
          }
        },
        "additionalProperties": true,
        "description": "Class ParentalRating."
      },
      "PathSubstitution": {
        "type": "object",
        "properties": {
          "From": {
            "type": "string",
            "description": "Gets or sets the value to substitute."
          },
          "To": {
            "type": "string",
            "description": "Gets or sets the value to substitution with."
          }
        },
        "additionalProperties": true,
        "description": "Defines the MediaBrowser.Model.Configuration.PathSubstitution."
      },
      "PersonLookupInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "OriginalTitle": {
            "type": "string",
            "description": "Gets or sets the original title.",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "MetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the metadata language.",
            "nullable": true
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code.",
            "nullable": true
          },
          "ProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the provider ids.",
            "nullable": true
          },
          "Year": {
            "type": "integer",
            "description": "Gets or sets the year.",
            "format": "int32",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PremiereDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsAutomated": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "PersonLookupInfoRemoteSearchQuery": {
        "type": "object",
        "properties": {
          "SearchInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PersonLookupInfo"
              }
            ],
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "format": "uuid"
          },
          "SearchProviderName": {
            "type": "string",
            "description": "Gets or sets the provider name to search within if set.",
            "nullable": true
          },
          "IncludeDisabledProviders": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether disabled providers should be included."
          }
        },
        "additionalProperties": true
      },
      "PingRequestDto": {
        "type": "object",
        "properties": {
          "Ping": {
            "type": "integer",
            "description": "Gets or sets the ping time.",
            "format": "int64"
          }
        },
        "additionalProperties": true,
        "description": "Class PingRequestDto."
      },
      "PinRedeemResult": {
        "type": "object",
        "properties": {
          "Success": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this MediaBrowser.Model.Users.PinRedeemResult is success."
          },
          "UsersReset": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the users reset."
          }
        },
        "additionalProperties": true
      },
      "PlayAccess": {
        "enum": [
          "Full",
          "None"
        ],
        "type": "string"
      },
      "PlaybackErrorCode": {
        "enum": [
          "NotAllowed",
          "NoCompatibleStream",
          "RateLimitExceeded"
        ],
        "type": "string"
      },
      "PlaybackInfoDto": {
        "type": "object",
        "properties": {
          "UserId": {
            "type": "string",
            "description": "Gets or sets the playback userId.",
            "format": "uuid",
            "nullable": true
          },
          "MaxStreamingBitrate": {
            "type": "integer",
            "description": "Gets or sets the max streaming bitrate.",
            "format": "int32",
            "nullable": true
          },
          "StartTimeTicks": {
            "type": "integer",
            "description": "Gets or sets the start time in ticks.",
            "format": "int64",
            "nullable": true
          },
          "AudioStreamIndex": {
            "type": "integer",
            "description": "Gets or sets the audio stream index.",
            "format": "int32",
            "nullable": true
          },
          "SubtitleStreamIndex": {
            "type": "integer",
            "description": "Gets or sets the subtitle stream index.",
            "format": "int32",
            "nullable": true
          },
          "MaxAudioChannels": {
            "type": "integer",
            "description": "Gets or sets the max audio channels.",
            "format": "int32",
            "nullable": true
          },
          "MediaSourceId": {
            "type": "string",
            "description": "Gets or sets the media source id.",
            "nullable": true
          },
          "LiveStreamId": {
            "type": "string",
            "description": "Gets or sets the live stream id.",
            "nullable": true
          },
          "DeviceProfile": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DeviceProfile"
              }
            ],
            "description": "A MediaBrowser.Model.Dlna.DeviceProfile represents a set of metadata which determines which content a certain device is able to play.\r\n<br />\r\nSpecifically, it defines the supported <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.ContainerProfiles\">containers</see> and\r\n<see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.CodecProfiles\">codecs</see> (video and/or audio, including codec profiles and levels)\r\nthe device is able to direct play (without transcoding or remuxing),\r\nas well as which <see cref=\"P:MediaBrowser.Model.Dlna.DeviceProfile.TranscodingProfiles\">containers/codecs to transcode to</see> in case it isn't.",
            "nullable": true
          },
          "EnableDirectPlay": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to enable direct play.",
            "nullable": true
          },
          "EnableDirectStream": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to enable direct stream.",
            "nullable": true
          },
          "EnableTranscoding": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to enable transcoding.",
            "nullable": true
          },
          "AllowVideoStreamCopy": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to enable video stream copy.",
            "nullable": true
          },
          "AllowAudioStreamCopy": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to allow audio stream copy.",
            "nullable": true
          },
          "AutoOpenLiveStream": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to auto open the live stream.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Plabyback info dto."
      },
      "PlaybackInfoResponse": {
        "type": "object",
        "properties": {
          "MediaSources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MediaSourceInfo"
            },
            "description": "Gets or sets the media sources."
          },
          "PlaySessionId": {
            "type": "string",
            "description": "Gets or sets the play session identifier.",
            "nullable": true
          },
          "ErrorCode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PlaybackErrorCode"
              }
            ],
            "description": "Gets or sets the error code.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class PlaybackInfoResponse."
      },
      "PlaybackProgressInfo": {
        "type": "object",
        "properties": {
          "CanSeek": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance can seek."
          },
          "Item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseItemDto"
              }
            ],
            "description": "Gets or sets the item.",
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "description": "Gets or sets the item identifier.",
            "format": "uuid"
          },
          "SessionId": {
            "type": "string",
            "description": "Gets or sets the session id.",
            "nullable": true
          },
          "MediaSourceId": {
            "type": "string",
            "description": "Gets or sets the media version identifier.",
            "nullable": true
          },
          "AudioStreamIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the audio stream.",
            "format": "int32",
            "nullable": true
          },
          "SubtitleStreamIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the subtitle stream.",
            "format": "int32",
            "nullable": true
          },
          "IsPaused": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is paused."
          },
          "IsMuted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is muted."
          },
          "PositionTicks": {
            "type": "integer",
            "description": "Gets or sets the position ticks.",
            "format": "int64",
            "nullable": true
          },
          "PlaybackStartTimeTicks": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "VolumeLevel": {
            "type": "integer",
            "description": "Gets or sets the volume level.",
            "format": "int32",
            "nullable": true
          },
          "Brightness": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AspectRatio": {
            "type": "string",
            "nullable": true
          },
          "PlayMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PlayMethod"
              }
            ],
            "description": "Gets or sets the play method."
          },
          "LiveStreamId": {
            "type": "string",
            "description": "Gets or sets the live stream identifier.",
            "nullable": true
          },
          "PlaySessionId": {
            "type": "string",
            "description": "Gets or sets the play session identifier.",
            "nullable": true
          },
          "RepeatMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RepeatMode"
              }
            ],
            "description": "Gets or sets the repeat mode."
          },
          "NowPlayingQueue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueueItem"
            },
            "nullable": true
          },
          "PlaylistItemId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class PlaybackProgressInfo."
      },
      "PlaybackStartInfo": {
        "type": "object",
        "properties": {
          "CanSeek": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance can seek."
          },
          "Item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseItemDto"
              }
            ],
            "description": "Gets or sets the item.",
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "description": "Gets or sets the item identifier.",
            "format": "uuid"
          },
          "SessionId": {
            "type": "string",
            "description": "Gets or sets the session id.",
            "nullable": true
          },
          "MediaSourceId": {
            "type": "string",
            "description": "Gets or sets the media version identifier.",
            "nullable": true
          },
          "AudioStreamIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the audio stream.",
            "format": "int32",
            "nullable": true
          },
          "SubtitleStreamIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the subtitle stream.",
            "format": "int32",
            "nullable": true
          },
          "IsPaused": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is paused."
          },
          "IsMuted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is muted."
          },
          "PositionTicks": {
            "type": "integer",
            "description": "Gets or sets the position ticks.",
            "format": "int64",
            "nullable": true
          },
          "PlaybackStartTimeTicks": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "VolumeLevel": {
            "type": "integer",
            "description": "Gets or sets the volume level.",
            "format": "int32",
            "nullable": true
          },
          "Brightness": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AspectRatio": {
            "type": "string",
            "nullable": true
          },
          "PlayMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PlayMethod"
              }
            ],
            "description": "Gets or sets the play method."
          },
          "LiveStreamId": {
            "type": "string",
            "description": "Gets or sets the live stream identifier.",
            "nullable": true
          },
          "PlaySessionId": {
            "type": "string",
            "description": "Gets or sets the play session identifier.",
            "nullable": true
          },
          "RepeatMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RepeatMode"
              }
            ],
            "description": "Gets or sets the repeat mode."
          },
          "NowPlayingQueue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueueItem"
            },
            "nullable": true
          },
          "PlaylistItemId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class PlaybackStartInfo."
      },
      "PlaybackStopInfo": {
        "type": "object",
        "properties": {
          "Item": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseItemDto"
              }
            ],
            "description": "Gets or sets the item.",
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "description": "Gets or sets the item identifier.",
            "format": "uuid"
          },
          "SessionId": {
            "type": "string",
            "description": "Gets or sets the session id.",
            "nullable": true
          },
          "MediaSourceId": {
            "type": "string",
            "description": "Gets or sets the media version identifier.",
            "nullable": true
          },
          "PositionTicks": {
            "type": "integer",
            "description": "Gets or sets the position ticks.",
            "format": "int64",
            "nullable": true
          },
          "LiveStreamId": {
            "type": "string",
            "description": "Gets or sets the live stream identifier.",
            "nullable": true
          },
          "PlaySessionId": {
            "type": "string",
            "description": "Gets or sets the play session identifier.",
            "nullable": true
          },
          "Failed": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this MediaBrowser.Model.Session.PlaybackStopInfo is failed."
          },
          "NextMediaType": {
            "type": "string",
            "nullable": true
          },
          "PlaylistItemId": {
            "type": "string",
            "nullable": true
          },
          "NowPlayingQueue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueueItem"
            },
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class PlaybackStopInfo."
      },
      "PlayCommand": {
        "enum": [
          "PlayNow",
          "PlayNext",
          "PlayLast",
          "PlayInstantMix",
          "PlayShuffle"
        ],
        "type": "string",
        "description": "Enum PlayCommand."
      },
      "PlayerStateInfo": {
        "type": "object",
        "properties": {
          "PositionTicks": {
            "type": "integer",
            "description": "Gets or sets the now playing position ticks.",
            "format": "int64",
            "nullable": true
          },
          "CanSeek": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance can seek."
          },
          "IsPaused": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is paused."
          },
          "IsMuted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is muted."
          },
          "VolumeLevel": {
            "type": "integer",
            "description": "Gets or sets the volume level.",
            "format": "int32",
            "nullable": true
          },
          "AudioStreamIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the now playing audio stream.",
            "format": "int32",
            "nullable": true
          },
          "SubtitleStreamIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the now playing subtitle stream.",
            "format": "int32",
            "nullable": true
          },
          "MediaSourceId": {
            "type": "string",
            "description": "Gets or sets the now playing media version identifier.",
            "nullable": true
          },
          "PlayMethod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PlayMethod"
              }
            ],
            "description": "Gets or sets the play method.",
            "nullable": true
          },
          "RepeatMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RepeatMode"
              }
            ],
            "description": "Gets or sets the repeat mode."
          },
          "LiveStreamId": {
            "type": "string",
            "description": "Gets or sets the now playing live stream identifier.",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "PlaylistCreationResult": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          }
        },
        "additionalProperties": true
      },
      "PlayMethod": {
        "enum": [
          "Transcode",
          "DirectStream",
          "DirectPlay"
        ],
        "type": "string"
      },
      "PlayRequest": {
        "type": "object",
        "properties": {
          "ItemIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the item ids.",
            "nullable": true
          },
          "StartPositionTicks": {
            "type": "integer",
            "description": "Gets or sets the start position ticks that the first item should be played at.",
            "format": "int64",
            "nullable": true
          },
          "PlayCommand": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PlayCommand"
              }
            ],
            "description": "Gets or sets the play command."
          },
          "ControllingUserId": {
            "type": "string",
            "description": "Gets or sets the controlling user identifier.",
            "format": "uuid"
          },
          "SubtitleStreamIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AudioStreamIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "MediaSourceId": {
            "type": "string",
            "nullable": true
          },
          "StartIndex": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class PlayRequest."
      },
      "PlayRequestDto": {
        "type": "object",
        "properties": {
          "PlayingQueue": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the playing queue."
          },
          "PlayingItemPosition": {
            "type": "integer",
            "description": "Gets or sets the position of the playing item in the queue.",
            "format": "int32"
          },
          "StartPositionTicks": {
            "type": "integer",
            "description": "Gets or sets the start position ticks.",
            "format": "int64"
          }
        },
        "additionalProperties": true,
        "description": "Class PlayRequestDto."
      },
      "PlaystateCommand": {
        "enum": [
          "Stop",
          "Pause",
          "Unpause",
          "NextTrack",
          "PreviousTrack",
          "Seek",
          "Rewind",
          "FastForward",
          "PlayPause"
        ],
        "type": "string",
        "description": "Enum PlaystateCommand."
      },
      "PlaystateRequest": {
        "type": "object",
        "properties": {
          "Command": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PlaystateCommand"
              }
            ],
            "description": "Enum PlaystateCommand."
          },
          "SeekPositionTicks": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "ControllingUserId": {
            "type": "string",
            "description": "Gets or sets the controlling user identifier.",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "PluginInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name."
          },
          "Version": {
            "type": "string",
            "description": "Gets or sets the version."
          },
          "ConfigurationFileName": {
            "type": "string",
            "description": "Gets or sets the name of the configuration file.",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Gets or sets the description."
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the unique id.",
            "format": "uuid"
          },
          "CanUninstall": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the plugin can be uninstalled."
          },
          "HasImage": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this plugin has a valid image."
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PluginStatus"
              }
            ],
            "description": "Gets or sets a value indicating the status of the plugin."
          }
        },
        "additionalProperties": true,
        "description": "This is a serializable stub class that is used by the api to provide information about installed plugins."
      },
      "PluginStatus": {
        "enum": [
          "Active",
          "Restart",
          "Deleted",
          "Superceded",
          "Malfunctioned",
          "NotSupported",
          "Disabled"
        ],
        "type": "string",
        "description": "Plugin load status."
      },
      "PreviousItemRequestDto": {
        "type": "object",
        "properties": {
          "PlaylistItemId": {
            "type": "string",
            "description": "Gets or sets the playing item identifier.",
            "format": "uuid"
          }
        },
        "additionalProperties": true,
        "description": "Class PreviousItemRequestDto."
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": {}
      },
      "ProfileCondition": {
        "type": "object",
        "properties": {
          "Condition": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileConditionType"
              }
            ]
          },
          "Property": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProfileConditionValue"
              }
            ]
          },
          "Value": {
            "type": "string",
            "nullable": true
          },
          "IsRequired": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "ProfileConditionType": {
        "enum": [
          "Equals",
          "NotEquals",
          "LessThanEqual",
          "GreaterThanEqual",
          "EqualsAny"
        ],
        "type": "string"
      },
      "ProfileConditionValue": {
        "enum": [
          "AudioChannels",
          "AudioBitrate",
          "AudioProfile",
          "Width",
          "Height",
          "Has64BitOffsets",
          "PacketLength",
          "VideoBitDepth",
          "VideoBitrate",
          "VideoFramerate",
          "VideoLevel",
          "VideoProfile",
          "VideoTimestamp",
          "IsAnamorphic",
          "RefFrames",
          "NumAudioStreams",
          "NumVideoStreams",
          "IsSecondaryAudio",
          "VideoCodecTag",
          "IsAvc",
          "IsInterlaced",
          "AudioSampleRate",
          "AudioBitDepth",
          "VideoRangeType"
        ],
        "type": "string"
      },
      "ProgramAudio": {
        "enum": [
          "Mono",
          "Stereo",
          "Dolby",
          "DolbyDigital",
          "Thx",
          "Atmos"
        ],
        "type": "string"
      },
      "PublicSystemInfo": {
        "type": "object",
        "properties": {
          "LocalAddress": {
            "type": "string",
            "description": "Gets or sets the local address.",
            "nullable": true
          },
          "ServerName": {
            "type": "string",
            "description": "Gets or sets the name of the server.",
            "nullable": true
          },
          "Version": {
            "type": "string",
            "description": "Gets or sets the server version.",
            "nullable": true
          },
          "ProductName": {
            "type": "string",
            "description": "Gets or sets the product name. This is the AssemblyProduct name.",
            "nullable": true
          },
          "OperatingSystem": {
            "type": "string",
            "description": "Gets or sets the operating system.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the id.",
            "nullable": true
          },
          "StartupWizardCompleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the startup wizard is completed.",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "QueryFilters": {
        "type": "object",
        "properties": {
          "Genres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameGuidPair"
            },
            "nullable": true
          },
          "Tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "QueryFiltersLegacy": {
        "type": "object",
        "properties": {
          "Genres": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "OfficialRatings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Years": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "QueueItem": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "PlaylistItemId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "QueueRequestDto": {
        "type": "object",
        "properties": {
          "ItemIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the items to enqueue."
          },
          "Mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupQueueMode"
              }
            ],
            "description": "Enum GroupQueueMode."
          }
        },
        "additionalProperties": true,
        "description": "Class QueueRequestDto."
      },
      "QuickConnectDto": {
        "required": [
          "Secret"
        ],
        "type": "object",
        "properties": {
          "Secret": {
            "type": "string",
            "description": "Gets or sets the quick connect secret."
          }
        },
        "additionalProperties": true,
        "description": "The quick connect request body."
      },
      "QuickConnectResult": {
        "type": "object",
        "properties": {
          "Authenticated": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this request is authorized."
          },
          "Secret": {
            "type": "string",
            "description": "Gets the secret value used to uniquely identify this request. Can be used to retrieve authentication information."
          },
          "Code": {
            "type": "string",
            "description": "Gets the user facing code used so the user can quickly differentiate this request from others."
          },
          "DeviceId": {
            "type": "string",
            "description": "Gets the requesting device id."
          },
          "DeviceName": {
            "type": "string",
            "description": "Gets the requesting device name."
          },
          "AppName": {
            "type": "string",
            "description": "Gets the requesting app name."
          },
          "AppVersion": {
            "type": "string",
            "description": "Gets the requesting app version."
          },
          "DateAdded": {
            "type": "string",
            "description": "Gets or sets the DateTime that this request was created.",
            "format": "date-time"
          }
        },
        "additionalProperties": true,
        "description": "Stores the state of an quick connect request."
      },
      "RatingType": {
        "enum": [
          "Score",
          "Likes"
        ],
        "type": "string"
      },
      "ReadyRequestDto": {
        "type": "object",
        "properties": {
          "When": {
            "type": "string",
            "description": "Gets or sets when the request has been made by the client.",
            "format": "date-time"
          },
          "PositionTicks": {
            "type": "integer",
            "description": "Gets or sets the position ticks.",
            "format": "int64"
          },
          "IsPlaying": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the client playback is unpaused."
          },
          "PlaylistItemId": {
            "type": "string",
            "description": "Gets or sets the playlist item identifier of the playing item.",
            "format": "uuid"
          }
        },
        "additionalProperties": true,
        "description": "Class ReadyRequest."
      },
      "RecommendationDto": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseItemDto"
            },
            "nullable": true
          },
          "RecommendationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecommendationType"
              }
            ]
          },
          "BaselineItemName": {
            "type": "string",
            "nullable": true
          },
          "CategoryId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": true
      },
      "RecommendationType": {
        "enum": [
          "SimilarToRecentlyPlayed",
          "SimilarToLikedItem",
          "HasDirectorFromRecentlyPlayed",
          "HasActorFromRecentlyPlayed",
          "HasLikedDirector",
          "HasLikedActor"
        ],
        "type": "string"
      },
      "RecordingStatus": {
        "enum": [
          "New",
          "InProgress",
          "Completed",
          "Cancelled",
          "ConflictedOk",
          "ConflictedNotOk",
          "Error"
        ],
        "type": "string"
      },
      "RemoteImageInfo": {
        "type": "object",
        "properties": {
          "ProviderName": {
            "type": "string",
            "description": "Gets or sets the name of the provider.",
            "nullable": true
          },
          "Url": {
            "type": "string",
            "description": "Gets or sets the URL.",
            "nullable": true
          },
          "ThumbnailUrl": {
            "type": "string",
            "description": "Gets or sets a url used for previewing a smaller version.",
            "nullable": true
          },
          "Height": {
            "type": "integer",
            "description": "Gets or sets the height.",
            "format": "int32",
            "nullable": true
          },
          "Width": {
            "type": "integer",
            "description": "Gets or sets the width.",
            "format": "int32",
            "nullable": true
          },
          "CommunityRating": {
            "type": "number",
            "description": "Gets or sets the community rating.",
            "format": "double",
            "nullable": true
          },
          "VoteCount": {
            "type": "integer",
            "description": "Gets or sets the vote count.",
            "format": "int32",
            "nullable": true
          },
          "Language": {
            "type": "string",
            "description": "Gets or sets the language.",
            "nullable": true
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageType"
              }
            ],
            "description": "Gets or sets the type."
          },
          "RatingType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RatingType"
              }
            ],
            "description": "Gets or sets the type of the rating."
          }
        },
        "additionalProperties": true,
        "description": "Class RemoteImageInfo."
      },
      "RemoteImageResult": {
        "type": "object",
        "properties": {
          "Images": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RemoteImageInfo"
            },
            "description": "Gets or sets the images.",
            "nullable": true
          },
          "TotalRecordCount": {
            "type": "integer",
            "description": "Gets or sets the total record count.",
            "format": "int32"
          },
          "Providers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the providers.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class RemoteImageResult."
      },
      "RemoteSearchResult": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "ProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the provider ids.",
            "nullable": true
          },
          "ProductionYear": {
            "type": "integer",
            "description": "Gets or sets the year.",
            "format": "int32",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IndexNumberEnd": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PremiereDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ImageUrl": {
            "type": "string",
            "nullable": true
          },
          "SearchProviderName": {
            "type": "string",
            "nullable": true
          },
          "Overview": {
            "type": "string",
            "nullable": true
          },
          "AlbumArtist": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RemoteSearchResult"
              }
            ],
            "nullable": true
          },
          "Artists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RemoteSearchResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "RemoteSubtitleInfo": {
        "type": "object",
        "properties": {
          "ThreeLetterISOLanguageName": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "nullable": true
          },
          "ProviderName": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Format": {
            "type": "string",
            "nullable": true
          },
          "Author": {
            "type": "string",
            "nullable": true
          },
          "Comment": {
            "type": "string",
            "nullable": true
          },
          "DateCreated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "CommunityRating": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "DownloadCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IsHashMatch": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "RemoveFromPlaylistRequestDto": {
        "type": "object",
        "properties": {
          "PlaylistItemIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Gets or sets the playlist identifiers ot the items. Ignored when clearing the playlist."
          },
          "ClearPlaylist": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the entire playlist should be cleared."
          },
          "ClearPlayingItem": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the playing item should be removed as well. Used only when clearing the playlist."
          }
        },
        "additionalProperties": true,
        "description": "Class RemoveFromPlaylistRequestDto."
      },
      "RepeatMode": {
        "enum": [
          "RepeatNone",
          "RepeatAll",
          "RepeatOne"
        ],
        "type": "string"
      },
      "RepositoryInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "Url": {
            "type": "string",
            "description": "Gets or sets the URL.",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the repository is enabled."
          }
        },
        "additionalProperties": true,
        "description": "Class RepositoryInfo."
      },
      "ResponseProfile": {
        "type": "object",
        "properties": {
          "Container": {
            "type": "string",
            "nullable": true
          },
          "AudioCodec": {
            "type": "string",
            "nullable": true
          },
          "VideoCodec": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DlnaProfileType"
              }
            ]
          },
          "OrgPn": {
            "type": "string",
            "nullable": true
          },
          "MimeType": {
            "type": "string",
            "nullable": true
          },
          "Conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfileCondition"
            },
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "ScrollDirection": {
        "enum": [
          "Horizontal",
          "Vertical"
        ],
        "type": "string",
        "description": "An enum representing the axis that should be scrolled."
      },
      "SearchHint": {
        "type": "object",
        "properties": {
          "ItemId": {
            "type": "string",
            "description": "Gets or sets the item id.",
            "format": "uuid"
          },
          "Id": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "MatchedTerm": {
            "type": "string",
            "description": "Gets or sets the matched term.",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "description": "Gets or sets the index number.",
            "format": "int32",
            "nullable": true
          },
          "ProductionYear": {
            "type": "integer",
            "description": "Gets or sets the production year.",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "description": "Gets or sets the parent index number.",
            "format": "int32",
            "nullable": true
          },
          "PrimaryImageTag": {
            "type": "string",
            "description": "Gets or sets the image tag.",
            "nullable": true
          },
          "ThumbImageTag": {
            "type": "string",
            "description": "Gets or sets the thumb image tag.",
            "nullable": true
          },
          "ThumbImageItemId": {
            "type": "string",
            "description": "Gets or sets the thumb image item identifier.",
            "nullable": true
          },
          "BackdropImageTag": {
            "type": "string",
            "description": "Gets or sets the backdrop image tag.",
            "nullable": true
          },
          "BackdropImageItemId": {
            "type": "string",
            "description": "Gets or sets the backdrop image item identifier.",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "description": "Gets or sets the type.",
            "nullable": true
          },
          "IsFolder": {
            "type": "boolean",
            "nullable": true
          },
          "RunTimeTicks": {
            "type": "integer",
            "description": "Gets or sets the run time ticks.",
            "format": "int64",
            "nullable": true
          },
          "MediaType": {
            "type": "string",
            "description": "Gets or sets the type of the media.",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "EndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "Series": {
            "type": "string",
            "description": "Gets or sets the series.",
            "nullable": true
          },
          "Status": {
            "type": "string",
            "nullable": true
          },
          "Album": {
            "type": "string",
            "description": "Gets or sets the album.",
            "nullable": true
          },
          "AlbumId": {
            "type": "string",
            "format": "uuid"
          },
          "AlbumArtist": {
            "type": "string",
            "description": "Gets or sets the album artist.",
            "nullable": true
          },
          "Artists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the artists.",
            "nullable": true
          },
          "SongCount": {
            "type": "integer",
            "description": "Gets or sets the song count.",
            "format": "int32",
            "nullable": true
          },
          "EpisodeCount": {
            "type": "integer",
            "description": "Gets or sets the episode count.",
            "format": "int32",
            "nullable": true
          },
          "ChannelId": {
            "type": "string",
            "description": "Gets or sets the channel identifier.",
            "format": "uuid"
          },
          "ChannelName": {
            "type": "string",
            "description": "Gets or sets the name of the channel.",
            "nullable": true
          },
          "PrimaryImageAspectRatio": {
            "type": "number",
            "description": "Gets or sets the primary image aspect ratio.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class SearchHintResult."
      },
      "SearchHintResult": {
        "type": "object",
        "properties": {
          "SearchHints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchHint"
            },
            "description": "Gets the search hints."
          },
          "TotalRecordCount": {
            "type": "integer",
            "description": "Gets the total record count.",
            "format": "int32"
          }
        },
        "additionalProperties": true,
        "description": "Class SearchHintResult."
      },
      "SeekRequestDto": {
        "type": "object",
        "properties": {
          "PositionTicks": {
            "type": "integer",
            "description": "Gets or sets the position ticks.",
            "format": "int64"
          }
        },
        "additionalProperties": true,
        "description": "Class SeekRequestDto."
      },
      "SendCommand": {
        "type": "object",
        "properties": {
          "GroupId": {
            "type": "string",
            "description": "Gets the group identifier.",
            "format": "uuid"
          },
          "PlaylistItemId": {
            "type": "string",
            "description": "Gets the playlist identifier of the playing item.",
            "format": "uuid"
          },
          "When": {
            "type": "string",
            "description": "Gets or sets the UTC time when to execute the command.",
            "format": "date-time"
          },
          "PositionTicks": {
            "type": "integer",
            "description": "Gets the position ticks.",
            "format": "int64",
            "nullable": true
          },
          "Command": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SendCommandType"
              }
            ],
            "description": "Gets the command."
          },
          "EmittedAt": {
            "type": "string",
            "description": "Gets the UTC time when this command has been emitted.",
            "format": "date-time"
          }
        },
        "additionalProperties": true,
        "description": "Class SendCommand."
      },
      "SendCommandType": {
        "enum": [
          "Unpause",
          "Pause",
          "Stop",
          "Seek"
        ],
        "type": "string",
        "description": "Enum SendCommandType."
      },
      "SendToUserType": {
        "enum": [
          "All",
          "Admins",
          "Custom"
        ],
        "type": "string"
      },
      "SeriesInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "OriginalTitle": {
            "type": "string",
            "description": "Gets or sets the original title.",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "MetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the metadata language.",
            "nullable": true
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code.",
            "nullable": true
          },
          "ProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the provider ids.",
            "nullable": true
          },
          "Year": {
            "type": "integer",
            "description": "Gets or sets the year.",
            "format": "int32",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PremiereDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsAutomated": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "SeriesInfoRemoteSearchQuery": {
        "type": "object",
        "properties": {
          "SearchInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SeriesInfo"
              }
            ],
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "format": "uuid"
          },
          "SearchProviderName": {
            "type": "string",
            "description": "Gets or sets the provider name to search within if set.",
            "nullable": true
          },
          "IncludeDisabledProviders": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether disabled providers should be included."
          }
        },
        "additionalProperties": true
      },
      "SeriesStatus": {
        "enum": [
          "Continuing",
          "Ended"
        ],
        "type": "string",
        "description": "Enum SeriesStatus."
      },
      "SeriesTimerInfoDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets the Id of the recording.",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "ServerId": {
            "type": "string",
            "description": "Gets or sets the server identifier.",
            "nullable": true
          },
          "ExternalId": {
            "type": "string",
            "description": "Gets or sets the external identifier.",
            "nullable": true
          },
          "ChannelId": {
            "type": "string",
            "description": "Gets or sets the channel id of the recording.",
            "format": "uuid"
          },
          "ExternalChannelId": {
            "type": "string",
            "description": "Gets or sets the external channel identifier.",
            "nullable": true
          },
          "ChannelName": {
            "type": "string",
            "description": "Gets or sets the channel name of the recording.",
            "nullable": true
          },
          "ChannelPrimaryImageTag": {
            "type": "string",
            "nullable": true
          },
          "ProgramId": {
            "type": "string",
            "description": "Gets or sets the program identifier.",
            "nullable": true
          },
          "ExternalProgramId": {
            "type": "string",
            "description": "Gets or sets the external program identifier.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets the name of the recording.",
            "nullable": true
          },
          "Overview": {
            "type": "string",
            "description": "Gets or sets the description of the recording.",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Gets or sets the start date of the recording, in UTC.",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "Gets or sets the end date of the recording, in UTC.",
            "format": "date-time"
          },
          "ServiceName": {
            "type": "string",
            "description": "Gets or sets the name of the service.",
            "nullable": true
          },
          "Priority": {
            "type": "integer",
            "description": "Gets or sets the priority.",
            "format": "int32"
          },
          "PrePaddingSeconds": {
            "type": "integer",
            "description": "Gets or sets the pre padding seconds.",
            "format": "int32"
          },
          "PostPaddingSeconds": {
            "type": "integer",
            "description": "Gets or sets the post padding seconds.",
            "format": "int32"
          },
          "IsPrePaddingRequired": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is pre padding required."
          },
          "ParentBackdropItemId": {
            "type": "string",
            "description": "Gets or sets the Id of the Parent that has a backdrop if the item does not have one.",
            "nullable": true
          },
          "ParentBackdropImageTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the parent backdrop image tags.",
            "nullable": true
          },
          "IsPostPaddingRequired": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is post padding required."
          },
          "KeepUntil": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeepUntil"
              }
            ]
          },
          "RecordAnyTime": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [record any time]."
          },
          "SkipEpisodesInLibrary": {
            "type": "boolean"
          },
          "RecordAnyChannel": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [record any channel]."
          },
          "KeepUpTo": {
            "type": "integer",
            "format": "int32"
          },
          "RecordNewOnly": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [record new only]."
          },
          "Days": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            },
            "description": "Gets or sets the days.",
            "nullable": true
          },
          "DayPattern": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DayPattern"
              }
            ],
            "description": "Gets or sets the day pattern.",
            "nullable": true
          },
          "ImageTags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Gets or sets the image tags.",
            "nullable": true
          },
          "ParentThumbItemId": {
            "type": "string",
            "description": "Gets or sets the parent thumb item id.",
            "nullable": true
          },
          "ParentThumbImageTag": {
            "type": "string",
            "description": "Gets or sets the parent thumb image tag.",
            "nullable": true
          },
          "ParentPrimaryImageItemId": {
            "type": "string",
            "description": "Gets or sets the parent primary image item identifier.",
            "nullable": true
          },
          "ParentPrimaryImageTag": {
            "type": "string",
            "description": "Gets or sets the parent primary image tag.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class SeriesTimerInfoDto."
      },
      "SeriesTimerInfoDtoQueryResult": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SeriesTimerInfoDto"
            },
            "description": "Gets or sets the items.",
            "nullable": true
          },
          "TotalRecordCount": {
            "type": "integer",
            "description": "Gets or sets the total number of records available.",
            "format": "int32"
          },
          "StartIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the first record in Items.",
            "format": "int32"
          }
        },
        "additionalProperties": true
      },
      "ServerConfiguration": {
        "type": "object",
        "properties": {
          "LogFileRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the number of days we should retain log files.",
            "format": "int32"
          },
          "IsStartupWizardCompleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is first run."
          },
          "CachePath": {
            "type": "string",
            "description": "Gets or sets the cache path.",
            "nullable": true
          },
          "PreviousVersion": {
            "type": "string",
            "description": "Gets or sets the last known version that was ran using the configuration.",
            "nullable": true
          },
          "PreviousVersionStr": {
            "type": "string",
            "description": "Gets or sets the stringified PreviousVersion to be stored/loaded,\r\nbecause System.Version itself isn't xml-serializable.",
            "nullable": true
          },
          "EnableMetrics": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to enable prometheus metrics exporting."
          },
          "EnableNormalizedItemByNameIds": {
            "type": "boolean"
          },
          "IsPortAuthorized": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is port authorized."
          },
          "QuickConnectAvailable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether quick connect is available for use on this server."
          },
          "EnableCaseSensitiveItemIds": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [enable case sensitive item ids]."
          },
          "DisableLiveTvChannelUserDataName": {
            "type": "boolean"
          },
          "MetadataPath": {
            "type": "string",
            "description": "Gets or sets the metadata path."
          },
          "MetadataNetworkPath": {
            "type": "string"
          },
          "PreferredMetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the preferred metadata language."
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code."
          },
          "SortReplaceCharacters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets characters to be replaced with a ' ' in strings to create a sort name."
          },
          "SortRemoveCharacters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets characters to be removed from strings to create a sort name."
          },
          "SortRemoveWords": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets words to be removed from strings to create a sort name."
          },
          "MinResumePct": {
            "type": "integer",
            "description": "Gets or sets the minimum percentage of an item that must be played in order for playstate to be updated.",
            "format": "int32"
          },
          "MaxResumePct": {
            "type": "integer",
            "description": "Gets or sets the maximum percentage of an item that can be played while still saving playstate. If this percentage is crossed playstate will be reset to the beginning and the item will be marked watched.",
            "format": "int32"
          },
          "MinResumeDurationSeconds": {
            "type": "integer",
            "description": "Gets or sets the minimum duration that an item must have in order to be eligible for playstate updates..",
            "format": "int32"
          },
          "MinAudiobookResume": {
            "type": "integer",
            "description": "Gets or sets the minimum minutes of a book that must be played in order for playstate to be updated.",
            "format": "int32"
          },
          "MaxAudiobookResume": {
            "type": "integer",
            "description": "Gets or sets the remaining minutes of a book that can be played while still saving playstate. If this percentage is crossed playstate will be reset to the beginning and the item will be marked watched.",
            "format": "int32"
          },
          "LibraryMonitorDelay": {
            "type": "integer",
            "description": "Gets or sets the delay in seconds that we will wait after a file system change to try and discover what has been added/removed\r\nSome delay is necessary with some items because their creation is not atomic.  It involves the creation of several\r\ndifferent directories and files.",
            "format": "int32"
          },
          "ImageSavingConvention": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageSavingConvention"
              }
            ],
            "description": "Gets or sets the image saving convention."
          },
          "MetadataOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetadataOptions"
            }
          },
          "SkipDeserializationForBasicTypes": {
            "type": "boolean"
          },
          "ServerName": {
            "type": "string"
          },
          "UICulture": {
            "type": "string"
          },
          "SaveMetadataHidden": {
            "type": "boolean"
          },
          "ContentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NameValuePair"
            }
          },
          "RemoteClientBitrateLimit": {
            "type": "integer",
            "format": "int32"
          },
          "EnableFolderView": {
            "type": "boolean"
          },
          "EnableGroupingIntoCollections": {
            "type": "boolean"
          },
          "DisplaySpecialsWithinSeasons": {
            "type": "boolean"
          },
          "CodecsUsed": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "PluginRepositories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RepositoryInfo"
            }
          },
          "EnableExternalContentInSuggestions": {
            "type": "boolean"
          },
          "ImageExtractionTimeoutMs": {
            "type": "integer",
            "format": "int32"
          },
          "PathSubstitutions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PathSubstitution"
            }
          },
          "EnableSlowResponseWarning": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether slow server responses should be logged as a warning."
          },
          "SlowResponseThresholdMs": {
            "type": "integer",
            "description": "Gets or sets the threshold for the slow response time warning in ms.",
            "format": "int64"
          },
          "CorsHosts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the cors hosts."
          },
          "ActivityLogRetentionDays": {
            "type": "integer",
            "description": "Gets or sets the number of days we should retain activity logs.",
            "format": "int32",
            "nullable": true
          },
          "LibraryScanFanoutConcurrency": {
            "type": "integer",
            "description": "Gets or sets the how the library scan fans out.",
            "format": "int32"
          },
          "LibraryMetadataRefreshConcurrency": {
            "type": "integer",
            "description": "Gets or sets the how many metadata refreshes can run concurrently.",
            "format": "int32"
          },
          "RemoveOldPlugins": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether older plugins should automatically be deleted from the plugin folder."
          },
          "AllowClientLogUpload": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether clients should be allowed to upload logs."
          }
        },
        "additionalProperties": true,
        "description": "Represents the server configuration."
      },
      "ServerDiscoveryInfo": {
        "type": "object",
        "properties": {
          "Address": {
            "type": "string",
            "description": "Gets the address."
          },
          "Id": {
            "type": "string",
            "description": "Gets the server identifier."
          },
          "Name": {
            "type": "string",
            "description": "Gets the name."
          },
          "EndpointAddress": {
            "type": "string",
            "description": "Gets the endpoint address.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "The server discovery info model."
      },
      "SessionInfo": {
        "type": "object",
        "properties": {
          "PlayState": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PlayerStateInfo"
              }
            ],
            "nullable": true
          },
          "AdditionalUsers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionUserInfo"
            },
            "nullable": true
          },
          "Capabilities": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ClientCapabilities"
              }
            ],
            "nullable": true
          },
          "RemoteEndPoint": {
            "type": "string",
            "description": "Gets or sets the remote end point.",
            "nullable": true
          },
          "PlayableMediaTypes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets the playable media types.",
            "nullable": true,
            "readOnly": true
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the id.",
            "nullable": true
          },
          "UserId": {
            "type": "string",
            "description": "Gets or sets the user id.",
            "format": "uuid"
          },
          "UserName": {
            "type": "string",
            "description": "Gets or sets the username.",
            "nullable": true
          },
          "Client": {
            "type": "string",
            "description": "Gets or sets the type of the client.",
            "nullable": true
          },
          "LastActivityDate": {
            "type": "string",
            "description": "Gets or sets the last activity date.",
            "format": "date-time"
          },
          "LastPlaybackCheckIn": {
            "type": "string",
            "description": "Gets or sets the last playback check in.",
            "format": "date-time"
          },
          "DeviceName": {
            "type": "string",
            "description": "Gets or sets the name of the device.",
            "nullable": true
          },
          "DeviceType": {
            "type": "string",
            "description": "Gets or sets the type of the device.",
            "nullable": true
          },
          "NowPlayingItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseItemDto"
              }
            ],
            "description": "Gets or sets the now playing item.",
            "nullable": true
          },
          "FullNowPlayingItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseItem"
              }
            ],
            "description": "Class BaseItem.",
            "nullable": true
          },
          "NowViewingItem": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseItemDto"
              }
            ],
            "description": "This is strictly used as a data transfer object from the api layer.\r\nThis holds information about a BaseItem in a format that is convenient for the client.",
            "nullable": true
          },
          "DeviceId": {
            "type": "string",
            "description": "Gets or sets the device id.",
            "nullable": true
          },
          "ApplicationVersion": {
            "type": "string",
            "description": "Gets or sets the application version.",
            "nullable": true
          },
          "TranscodingInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscodingInfo"
              }
            ],
            "nullable": true
          },
          "IsActive": {
            "type": "boolean",
            "description": "Gets a value indicating whether this instance is active.",
            "readOnly": true
          },
          "SupportsMediaControl": {
            "type": "boolean",
            "readOnly": true
          },
          "SupportsRemoteControl": {
            "type": "boolean",
            "readOnly": true
          },
          "NowPlayingQueue": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueueItem"
            },
            "nullable": true
          },
          "NowPlayingQueueFullItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseItemDto"
            },
            "nullable": true
          },
          "HasCustomDeviceName": {
            "type": "boolean"
          },
          "PlaylistItemId": {
            "type": "string",
            "nullable": true
          },
          "ServerId": {
            "type": "string",
            "nullable": true
          },
          "UserPrimaryImageTag": {
            "type": "string",
            "nullable": true
          },
          "SupportedCommands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/GeneralCommandType"
            },
            "description": "Gets the supported commands.",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": true,
        "description": "Class SessionInfo."
      },
      "SessionMessageType": {
        "enum": [
          "ForceKeepAlive",
          "GeneralCommand",
          "UserDataChanged",
          "Sessions",
          "Play",
          "SyncPlayCommand",
          "SyncPlayGroupUpdate",
          "Playstate",
          "RestartRequired",
          "ServerShuttingDown",
          "ServerRestarting",
          "LibraryChanged",
          "UserDeleted",
          "UserUpdated",
          "SeriesTimerCreated",
          "TimerCreated",
          "SeriesTimerCancelled",
          "TimerCancelled",
          "RefreshProgress",
          "ScheduledTaskEnded",
          "PackageInstallationCancelled",
          "PackageInstallationFailed",
          "PackageInstallationCompleted",
          "PackageInstalling",
          "PackageUninstalled",
          "ActivityLogEntry",
          "ScheduledTasksInfo",
          "ActivityLogEntryStart",
          "ActivityLogEntryStop",
          "SessionsStart",
          "SessionsStop",
          "ScheduledTasksInfoStart",
          "ScheduledTasksInfoStop",
          "KeepAlive"
        ],
        "type": "string",
        "description": "The different kinds of messages that are used in the WebSocket api."
      },
      "SessionUserInfo": {
        "type": "object",
        "properties": {
          "UserId": {
            "type": "string",
            "description": "Gets or sets the user identifier.",
            "format": "uuid"
          },
          "UserName": {
            "type": "string",
            "description": "Gets or sets the name of the user.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class SessionUserInfo."
      },
      "SetChannelMappingDto": {
        "required": [
          "ProviderChannelId",
          "ProviderId",
          "TunerChannelId"
        ],
        "type": "object",
        "properties": {
          "ProviderId": {
            "type": "string",
            "description": "Gets or sets the provider id."
          },
          "TunerChannelId": {
            "type": "string",
            "description": "Gets or sets the tuner channel id."
          },
          "ProviderChannelId": {
            "type": "string",
            "description": "Gets or sets the provider channel id."
          }
        },
        "additionalProperties": true,
        "description": "Set channel mapping dto."
      },
      "SetPlaylistItemRequestDto": {
        "type": "object",
        "properties": {
          "PlaylistItemId": {
            "type": "string",
            "description": "Gets or sets the playlist identifier of the playing item.",
            "format": "uuid"
          }
        },
        "additionalProperties": true,
        "description": "Class SetPlaylistItemRequestDto."
      },
      "SetRepeatModeRequestDto": {
        "type": "object",
        "properties": {
          "Mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupRepeatMode"
              }
            ],
            "description": "Enum GroupRepeatMode."
          }
        },
        "additionalProperties": true,
        "description": "Class SetRepeatModeRequestDto."
      },
      "SetShuffleModeRequestDto": {
        "type": "object",
        "properties": {
          "Mode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/GroupShuffleMode"
              }
            ],
            "description": "Enum GroupShuffleMode."
          }
        },
        "additionalProperties": true,
        "description": "Class SetShuffleModeRequestDto."
      },
      "SongInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "OriginalTitle": {
            "type": "string",
            "description": "Gets or sets the original title.",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "MetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the metadata language.",
            "nullable": true
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code.",
            "nullable": true
          },
          "ProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the provider ids.",
            "nullable": true
          },
          "Year": {
            "type": "integer",
            "description": "Gets or sets the year.",
            "format": "int32",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PremiereDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsAutomated": {
            "type": "boolean"
          },
          "AlbumArtists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "Album": {
            "type": "string",
            "nullable": true
          },
          "Artists": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "SortOrder": {
        "enum": [
          "Ascending",
          "Descending"
        ],
        "type": "string",
        "description": "An enum representing the sorting order."
      },
      "SpecialViewOptionDto": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets view option name.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets view option id.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Special view option dto."
      },
      "StartupConfigurationDto": {
        "type": "object",
        "properties": {
          "UICulture": {
            "type": "string",
            "description": "Gets or sets UI language culture.",
            "nullable": true
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code.",
            "nullable": true
          },
          "PreferredMetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the preferred language for the metadata.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "The startup configuration DTO."
      },
      "StartupRemoteAccessDto": {
        "required": [
          "EnableAutomaticPortMapping",
          "EnableRemoteAccess"
        ],
        "type": "object",
        "properties": {
          "EnableRemoteAccess": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether enable remote access."
          },
          "EnableAutomaticPortMapping": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether enable automatic port mapping."
          }
        },
        "additionalProperties": true,
        "description": "Startup remote access dto."
      },
      "StartupUserDto": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the username.",
            "nullable": true
          },
          "Password": {
            "type": "string",
            "description": "Gets or sets the user's password.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "The startup user DTO."
      },
      "SubtitleDeliveryMethod": {
        "enum": [
          "Encode",
          "Embed",
          "External",
          "Hls",
          "Drop"
        ],
        "type": "string",
        "description": "Delivery method to use during playback of a specific subtitle format."
      },
      "SubtitleOptions": {
        "type": "object",
        "properties": {
          "SkipIfEmbeddedSubtitlesPresent": {
            "type": "boolean"
          },
          "SkipIfAudioTrackMatches": {
            "type": "boolean"
          },
          "DownloadLanguages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "DownloadMovieSubtitles": {
            "type": "boolean"
          },
          "DownloadEpisodeSubtitles": {
            "type": "boolean"
          },
          "OpenSubtitlesUsername": {
            "type": "string",
            "nullable": true
          },
          "OpenSubtitlesPasswordHash": {
            "type": "string",
            "nullable": true
          },
          "IsOpenSubtitleVipAccount": {
            "type": "boolean"
          },
          "RequirePerfectMatch": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "SubtitlePlaybackMode": {
        "enum": [
          "Default",
          "Always",
          "OnlyForced",
          "None",
          "Smart"
        ],
        "type": "string",
        "description": "An enum representing a subtitle playback mode."
      },
      "SubtitleProfile": {
        "type": "object",
        "properties": {
          "Format": {
            "type": "string",
            "nullable": true
          },
          "Method": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubtitleDeliveryMethod"
              }
            ],
            "description": "Delivery method to use during playback of a specific subtitle format."
          },
          "DidlMode": {
            "type": "string",
            "nullable": true
          },
          "Language": {
            "type": "string",
            "nullable": true
          },
          "Container": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "SyncPlayUserAccessType": {
        "enum": [
          "CreateAndJoinGroups",
          "JoinGroups",
          "None"
        ],
        "type": "string",
        "description": "Enum SyncPlayUserAccessType."
      },
      "SystemInfo": {
        "type": "object",
        "properties": {
          "LocalAddress": {
            "type": "string",
            "description": "Gets or sets the local address.",
            "nullable": true
          },
          "ServerName": {
            "type": "string",
            "description": "Gets or sets the name of the server.",
            "nullable": true
          },
          "Version": {
            "type": "string",
            "description": "Gets or sets the server version.",
            "nullable": true
          },
          "ProductName": {
            "type": "string",
            "description": "Gets or sets the product name. This is the AssemblyProduct name.",
            "nullable": true
          },
          "OperatingSystem": {
            "type": "string",
            "description": "Gets or sets the operating system.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the id.",
            "nullable": true
          },
          "StartupWizardCompleted": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the startup wizard is completed.",
            "nullable": true
          },
          "OperatingSystemDisplayName": {
            "type": "string",
            "description": "Gets or sets the display name of the operating system.",
            "nullable": true
          },
          "PackageName": {
            "type": "string",
            "description": "Gets or sets the package name.",
            "nullable": true
          },
          "HasPendingRestart": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance has pending restart."
          },
          "IsShuttingDown": {
            "type": "boolean"
          },
          "SupportsLibraryMonitor": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [supports library monitor]."
          },
          "WebSocketPortNumber": {
            "type": "integer",
            "description": "Gets or sets the web socket port number.",
            "format": "int32"
          },
          "CompletedInstallations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InstallationInfo"
            },
            "description": "Gets or sets the completed installations.",
            "nullable": true
          },
          "CanSelfRestart": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance can self restart."
          },
          "CanLaunchWebBrowser": {
            "type": "boolean"
          },
          "ProgramDataPath": {
            "type": "string",
            "description": "Gets or sets the program data path.",
            "nullable": true
          },
          "WebPath": {
            "type": "string",
            "description": "Gets or sets the web UI resources path.",
            "nullable": true
          },
          "ItemsByNamePath": {
            "type": "string",
            "description": "Gets or sets the items by name path.",
            "nullable": true
          },
          "CachePath": {
            "type": "string",
            "description": "Gets or sets the cache path.",
            "nullable": true
          },
          "LogPath": {
            "type": "string",
            "description": "Gets or sets the log path.",
            "nullable": true
          },
          "InternalMetadataPath": {
            "type": "string",
            "description": "Gets or sets the internal metadata path.",
            "nullable": true
          },
          "TranscodingTempPath": {
            "type": "string",
            "description": "Gets or sets the transcode path.",
            "nullable": true
          },
          "HasUpdateAvailable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance has update available.",
            "deprecated": true
          },
          "EncoderLocation": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FFmpegLocation"
              }
            ],
            "description": "Enum describing the location of the FFmpeg tool.",
            "deprecated": true
          },
          "SystemArchitecture": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Architecture"
              }
            ]
          }
        },
        "additionalProperties": true,
        "description": "Class SystemInfo."
      },
      "TaskCompletionStatus": {
        "enum": [
          "Completed",
          "Failed",
          "Cancelled",
          "Aborted"
        ],
        "type": "string",
        "description": "Enum TaskCompletionStatus."
      },
      "TaskInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "State": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskState"
              }
            ],
            "description": "Gets or sets the state of the task."
          },
          "CurrentProgressPercentage": {
            "type": "number",
            "description": "Gets or sets the progress.",
            "format": "double",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the id.",
            "nullable": true
          },
          "LastExecutionResult": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskResult"
              }
            ],
            "description": "Gets or sets the last execution result.",
            "nullable": true
          },
          "Triggers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskTriggerInfo"
            },
            "description": "Gets or sets the triggers.",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Gets or sets the description.",
            "nullable": true
          },
          "Category": {
            "type": "string",
            "description": "Gets or sets the category.",
            "nullable": true
          },
          "IsHidden": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is hidden."
          },
          "Key": {
            "type": "string",
            "description": "Gets or sets the key.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class TaskInfo."
      },
      "TaskResult": {
        "type": "object",
        "properties": {
          "StartTimeUtc": {
            "type": "string",
            "description": "Gets or sets the start time UTC.",
            "format": "date-time"
          },
          "EndTimeUtc": {
            "type": "string",
            "description": "Gets or sets the end time UTC.",
            "format": "date-time"
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskCompletionStatus"
              }
            ],
            "description": "Gets or sets the status."
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "Key": {
            "type": "string",
            "description": "Gets or sets the key.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the id.",
            "nullable": true
          },
          "ErrorMessage": {
            "type": "string",
            "description": "Gets or sets the error message.",
            "nullable": true
          },
          "LongErrorMessage": {
            "type": "string",
            "description": "Gets or sets the long error message.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class TaskExecutionInfo."
      },
      "TaskState": {
        "enum": [
          "Idle",
          "Cancelling",
          "Running"
        ],
        "type": "string",
        "description": "Enum TaskState."
      },
      "TaskTriggerInfo": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "description": "Gets or sets the type.",
            "nullable": true
          },
          "TimeOfDayTicks": {
            "type": "integer",
            "description": "Gets or sets the time of day.",
            "format": "int64",
            "nullable": true
          },
          "IntervalTicks": {
            "type": "integer",
            "description": "Gets or sets the interval.",
            "format": "int64",
            "nullable": true
          },
          "DayOfWeek": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DayOfWeek"
              }
            ],
            "description": "Gets or sets the day of week.",
            "nullable": true
          },
          "MaxRuntimeTicks": {
            "type": "integer",
            "description": "Gets or sets the maximum runtime ticks.",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class TaskTriggerInfo."
      },
      "ThemeMediaResult": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseItemDto"
            },
            "description": "Gets or sets the items.",
            "nullable": true
          },
          "TotalRecordCount": {
            "type": "integer",
            "description": "Gets or sets the total number of records available.",
            "format": "int32"
          },
          "StartIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the first record in Items.",
            "format": "int32"
          },
          "OwnerId": {
            "type": "string",
            "description": "Gets or sets the owner id.",
            "format": "uuid"
          }
        },
        "additionalProperties": true,
        "description": "Class ThemeMediaResult."
      },
      "TimerEventInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "ProgramId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "TimerInfoDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets the Id of the recording.",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "ServerId": {
            "type": "string",
            "description": "Gets or sets the server identifier.",
            "nullable": true
          },
          "ExternalId": {
            "type": "string",
            "description": "Gets or sets the external identifier.",
            "nullable": true
          },
          "ChannelId": {
            "type": "string",
            "description": "Gets or sets the channel id of the recording.",
            "format": "uuid"
          },
          "ExternalChannelId": {
            "type": "string",
            "description": "Gets or sets the external channel identifier.",
            "nullable": true
          },
          "ChannelName": {
            "type": "string",
            "description": "Gets or sets the channel name of the recording.",
            "nullable": true
          },
          "ChannelPrimaryImageTag": {
            "type": "string",
            "nullable": true
          },
          "ProgramId": {
            "type": "string",
            "description": "Gets or sets the program identifier.",
            "nullable": true
          },
          "ExternalProgramId": {
            "type": "string",
            "description": "Gets or sets the external program identifier.",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Gets or sets the name of the recording.",
            "nullable": true
          },
          "Overview": {
            "type": "string",
            "description": "Gets or sets the description of the recording.",
            "nullable": true
          },
          "StartDate": {
            "type": "string",
            "description": "Gets or sets the start date of the recording, in UTC.",
            "format": "date-time"
          },
          "EndDate": {
            "type": "string",
            "description": "Gets or sets the end date of the recording, in UTC.",
            "format": "date-time"
          },
          "ServiceName": {
            "type": "string",
            "description": "Gets or sets the name of the service.",
            "nullable": true
          },
          "Priority": {
            "type": "integer",
            "description": "Gets or sets the priority.",
            "format": "int32"
          },
          "PrePaddingSeconds": {
            "type": "integer",
            "description": "Gets or sets the pre padding seconds.",
            "format": "int32"
          },
          "PostPaddingSeconds": {
            "type": "integer",
            "description": "Gets or sets the post padding seconds.",
            "format": "int32"
          },
          "IsPrePaddingRequired": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is pre padding required."
          },
          "ParentBackdropItemId": {
            "type": "string",
            "description": "Gets or sets the Id of the Parent that has a backdrop if the item does not have one.",
            "nullable": true
          },
          "ParentBackdropImageTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the parent backdrop image tags.",
            "nullable": true
          },
          "IsPostPaddingRequired": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is post padding required."
          },
          "KeepUntil": {
            "allOf": [
              {
                "$ref": "#/components/schemas/KeepUntil"
              }
            ]
          },
          "Status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RecordingStatus"
              }
            ],
            "description": "Gets or sets the status."
          },
          "SeriesTimerId": {
            "type": "string",
            "description": "Gets or sets the series timer identifier.",
            "nullable": true
          },
          "ExternalSeriesTimerId": {
            "type": "string",
            "description": "Gets or sets the external series timer identifier.",
            "nullable": true
          },
          "RunTimeTicks": {
            "type": "integer",
            "description": "Gets or sets the run time ticks.",
            "format": "int64",
            "nullable": true
          },
          "ProgramInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseItemDto"
              }
            ],
            "description": "Gets or sets the program information.",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "TimerInfoDtoQueryResult": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimerInfoDto"
            },
            "description": "Gets or sets the items.",
            "nullable": true
          },
          "TotalRecordCount": {
            "type": "integer",
            "description": "Gets or sets the total number of records available.",
            "format": "int32"
          },
          "StartIndex": {
            "type": "integer",
            "description": "Gets or sets the index of the first record in Items.",
            "format": "int32"
          }
        },
        "additionalProperties": true
      },
      "TrailerInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "OriginalTitle": {
            "type": "string",
            "description": "Gets or sets the original title.",
            "nullable": true
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "MetadataLanguage": {
            "type": "string",
            "description": "Gets or sets the metadata language.",
            "nullable": true
          },
          "MetadataCountryCode": {
            "type": "string",
            "description": "Gets or sets the metadata country code.",
            "nullable": true
          },
          "ProviderIds": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "nullable": true
            },
            "description": "Gets or sets the provider ids.",
            "nullable": true
          },
          "Year": {
            "type": "integer",
            "description": "Gets or sets the year.",
            "format": "int32",
            "nullable": true
          },
          "IndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "ParentIndexNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "PremiereDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "IsAutomated": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "TrailerInfoRemoteSearchQuery": {
        "type": "object",
        "properties": {
          "SearchInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TrailerInfo"
              }
            ],
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "format": "uuid"
          },
          "SearchProviderName": {
            "type": "string",
            "description": "Gets or sets the provider name to search within if set.",
            "nullable": true
          },
          "IncludeDisabledProviders": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether disabled providers should be included."
          }
        },
        "additionalProperties": true
      },
      "TranscodeReason": {
        "enum": [
          "ContainerNotSupported",
          "VideoCodecNotSupported",
          "AudioCodecNotSupported",
          "SubtitleCodecNotSupported",
          "AudioIsExternal",
          "SecondaryAudioNotSupported",
          "VideoProfileNotSupported",
          "VideoLevelNotSupported",
          "VideoResolutionNotSupported",
          "VideoBitDepthNotSupported",
          "VideoFramerateNotSupported",
          "RefFramesNotSupported",
          "AnamorphicVideoNotSupported",
          "InterlacedVideoNotSupported",
          "AudioChannelsNotSupported",
          "AudioProfileNotSupported",
          "AudioSampleRateNotSupported",
          "AudioBitDepthNotSupported",
          "ContainerBitrateExceedsLimit",
          "VideoBitrateNotSupported",
          "AudioBitrateNotSupported",
          "UnknownVideoStreamInfo",
          "UnknownAudioStreamInfo",
          "DirectPlayError",
          "VideoRangeTypeNotSupported"
        ],
        "type": "string"
      },
      "TranscodeSeekInfo": {
        "enum": [
          "Auto",
          "Bytes"
        ],
        "type": "string"
      },
      "TranscodingInfo": {
        "type": "object",
        "properties": {
          "AudioCodec": {
            "type": "string",
            "nullable": true
          },
          "VideoCodec": {
            "type": "string",
            "nullable": true
          },
          "Container": {
            "type": "string",
            "nullable": true
          },
          "IsVideoDirect": {
            "type": "boolean"
          },
          "IsAudioDirect": {
            "type": "boolean"
          },
          "Bitrate": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Framerate": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "CompletionPercentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "Width": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "AudioChannels": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "HardwareAccelerationType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/HardwareEncodingType"
              }
            ],
            "nullable": true
          },
          "TranscodeReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranscodeReason"
            }
          }
        },
        "additionalProperties": true
      },
      "TranscodingProfile": {
        "type": "object",
        "properties": {
          "Container": {
            "type": "string"
          },
          "Type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DlnaProfileType"
              }
            ]
          },
          "VideoCodec": {
            "type": "string"
          },
          "AudioCodec": {
            "type": "string"
          },
          "Protocol": {
            "type": "string"
          },
          "EstimateContentLength": {
            "type": "boolean",
            "default": false
          },
          "EnableMpegtsM2TsMode": {
            "type": "boolean",
            "default": false
          },
          "TranscodeSeekInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TranscodeSeekInfo"
              }
            ],
            "default": "Auto"
          },
          "CopyTimestamps": {
            "type": "boolean",
            "default": false
          },
          "Context": {
            "allOf": [
              {
                "$ref": "#/components/schemas/EncodingContext"
              }
            ],
            "default": "Streaming"
          },
          "EnableSubtitlesInManifest": {
            "type": "boolean",
            "default": false
          },
          "MaxAudioChannels": {
            "type": "string",
            "nullable": true
          },
          "MinSegments": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "SegmentLength": {
            "type": "integer",
            "format": "int32",
            "default": 0
          },
          "BreakOnNonKeyFrames": {
            "type": "boolean",
            "default": false
          },
          "Conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProfileCondition"
            }
          }
        },
        "additionalProperties": true
      },
      "TransportStreamTimestamp": {
        "enum": [
          "None",
          "Zero",
          "Valid"
        ],
        "type": "string"
      },
      "TunerChannelMapping": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "ProviderChannelName": {
            "type": "string",
            "nullable": true
          },
          "ProviderChannelId": {
            "type": "string",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "TunerHostInfo": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "nullable": true
          },
          "Url": {
            "type": "string",
            "nullable": true
          },
          "Type": {
            "type": "string",
            "nullable": true
          },
          "DeviceId": {
            "type": "string",
            "nullable": true
          },
          "FriendlyName": {
            "type": "string",
            "nullable": true
          },
          "ImportFavoritesOnly": {
            "type": "boolean"
          },
          "AllowHWTranscoding": {
            "type": "boolean"
          },
          "EnableStreamLooping": {
            "type": "boolean"
          },
          "Source": {
            "type": "string",
            "nullable": true
          },
          "TunerCount": {
            "type": "integer",
            "format": "int32"
          },
          "UserAgent": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "TypeOptions": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "nullable": true
          },
          "MetadataFetchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "MetadataFetcherOrder": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ImageFetchers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ImageFetcherOrder": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "ImageOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ImageOption"
            },
            "nullable": true
          }
        },
        "additionalProperties": true
      },
      "UnratedItem": {
        "enum": [
          "Movie",
          "Trailer",
          "Series",
          "Music",
          "Book",
          "LiveTvChannel",
          "LiveTvProgram",
          "ChannelContent",
          "Other"
        ],
        "type": "string",
        "description": "An enum representing an unrated item."
      },
      "UpdateLibraryOptionsDto": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string",
            "description": "Gets or sets the library item id.",
            "format": "uuid"
          },
          "LibraryOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LibraryOptions"
              }
            ],
            "description": "Gets or sets library options.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Update library options dto."
      },
      "UpdateMediaPathRequestDto": {
        "required": [
          "Name",
          "PathInfo"
        ],
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the library name."
          },
          "PathInfo": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MediaPathInfo"
              }
            ],
            "description": "Gets or sets library folder path information."
          }
        },
        "additionalProperties": true,
        "description": "Update library options dto."
      },
      "UpdateUserEasyPassword": {
        "type": "object",
        "properties": {
          "NewPassword": {
            "type": "string",
            "description": "Gets or sets the new sha1-hashed password.",
            "nullable": true
          },
          "NewPw": {
            "type": "string",
            "description": "Gets or sets the new password.",
            "nullable": true
          },
          "ResetPassword": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to reset the password."
          }
        },
        "additionalProperties": true,
        "description": "The update user easy password request body."
      },
      "UpdateUserPassword": {
        "type": "object",
        "properties": {
          "CurrentPassword": {
            "type": "string",
            "description": "Gets or sets the current sha1-hashed password.",
            "nullable": true
          },
          "CurrentPw": {
            "type": "string",
            "description": "Gets or sets the current plain text password.",
            "nullable": true
          },
          "NewPw": {
            "type": "string",
            "description": "Gets or sets the new plain text password.",
            "nullable": true
          },
          "ResetPassword": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether to reset the password."
          }
        },
        "additionalProperties": true,
        "description": "The update user password request body."
      },
      "UploadSubtitleDto": {
        "required": [
          "Data",
          "Format",
          "IsForced",
          "Language"
        ],
        "type": "object",
        "properties": {
          "Language": {
            "type": "string",
            "description": "Gets or sets the subtitle language."
          },
          "Format": {
            "type": "string",
            "description": "Gets or sets the subtitle format."
          },
          "IsForced": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether the subtitle is forced."
          },
          "Data": {
            "type": "string",
            "description": "Gets or sets the subtitle data."
          }
        },
        "additionalProperties": true,
        "description": "Upload subtitles dto."
      },
      "UserConfiguration": {
        "type": "object",
        "properties": {
          "AudioLanguagePreference": {
            "type": "string",
            "description": "Gets or sets the audio language preference.",
            "nullable": true
          },
          "PlayDefaultAudioTrack": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [play default audio track]."
          },
          "SubtitleLanguagePreference": {
            "type": "string",
            "description": "Gets or sets the subtitle language preference.",
            "nullable": true
          },
          "DisplayMissingEpisodes": {
            "type": "boolean"
          },
          "GroupedFolders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "SubtitleMode": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SubtitlePlaybackMode"
              }
            ],
            "description": "An enum representing a subtitle playback mode."
          },
          "DisplayCollectionsView": {
            "type": "boolean"
          },
          "EnableLocalPassword": {
            "type": "boolean"
          },
          "OrderedViews": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "LatestItemsExcludes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "MyMediaExcludes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "HidePlayedInLatest": {
            "type": "boolean"
          },
          "RememberAudioSelections": {
            "type": "boolean"
          },
          "RememberSubtitleSelections": {
            "type": "boolean"
          },
          "EnableNextEpisodeAutoPlay": {
            "type": "boolean"
          }
        },
        "additionalProperties": true,
        "description": "Class UserConfiguration."
      },
      "UserDto": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "ServerId": {
            "type": "string",
            "description": "Gets or sets the server identifier.",
            "nullable": true
          },
          "ServerName": {
            "type": "string",
            "description": "Gets or sets the name of the server.\r\nThis is not used by the server and is for client-side usage only.",
            "nullable": true
          },
          "Id": {
            "type": "string",
            "description": "Gets or sets the id.",
            "format": "uuid"
          },
          "PrimaryImageTag": {
            "type": "string",
            "description": "Gets or sets the primary image tag.",
            "nullable": true
          },
          "HasPassword": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance has password."
          },
          "HasConfiguredPassword": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance has configured password."
          },
          "HasConfiguredEasyPassword": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance has configured easy password."
          },
          "EnableAutoLogin": {
            "type": "boolean",
            "description": "Gets or sets whether async login is enabled or not.",
            "nullable": true
          },
          "LastLoginDate": {
            "type": "string",
            "description": "Gets or sets the last login date.",
            "format": "date-time",
            "nullable": true
          },
          "LastActivityDate": {
            "type": "string",
            "description": "Gets or sets the last activity date.",
            "format": "date-time",
            "nullable": true
          },
          "Configuration": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserConfiguration"
              }
            ],
            "description": "Gets or sets the configuration.",
            "nullable": true
          },
          "Policy": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UserPolicy"
              }
            ],
            "description": "Gets or sets the policy.",
            "nullable": true
          },
          "PrimaryImageAspectRatio": {
            "type": "number",
            "description": "Gets or sets the primary image aspect ratio.",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class UserDto."
      },
      "UserItemDataDto": {
        "type": "object",
        "properties": {
          "Rating": {
            "type": "number",
            "description": "Gets or sets the rating.",
            "format": "double",
            "nullable": true
          },
          "PlayedPercentage": {
            "type": "number",
            "description": "Gets or sets the played percentage.",
            "format": "double",
            "nullable": true
          },
          "UnplayedItemCount": {
            "type": "integer",
            "description": "Gets or sets the unplayed item count.",
            "format": "int32",
            "nullable": true
          },
          "PlaybackPositionTicks": {
            "type": "integer",
            "description": "Gets or sets the playback position ticks.",
            "format": "int64"
          },
          "PlayCount": {
            "type": "integer",
            "description": "Gets or sets the play count.",
            "format": "int32"
          },
          "IsFavorite": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is favorite."
          },
          "Likes": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this MediaBrowser.Model.Dto.UserItemDataDto is likes.",
            "nullable": true
          },
          "LastPlayedDate": {
            "type": "string",
            "description": "Gets or sets the last played date.",
            "format": "date-time",
            "nullable": true
          },
          "Played": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this MediaBrowser.Model.Dto.UserItemDataDto is played."
          },
          "Key": {
            "type": "string",
            "description": "Gets or sets the key.",
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "description": "Gets or sets the item identifier.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Class UserItemDataDto."
      },
      "UserPolicy": {
        "type": "object",
        "properties": {
          "IsAdministrator": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is administrator."
          },
          "IsHidden": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is hidden."
          },
          "IsDisabled": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether this instance is disabled."
          },
          "MaxParentalRating": {
            "type": "integer",
            "description": "Gets or sets the max parental rating.",
            "format": "int32",
            "nullable": true
          },
          "BlockedTags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "EnableUserPreferenceAccess": {
            "type": "boolean"
          },
          "AccessSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessSchedule"
            },
            "nullable": true
          },
          "BlockUnratedItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnratedItem"
            },
            "nullable": true
          },
          "EnableRemoteControlOfOtherUsers": {
            "type": "boolean"
          },
          "EnableSharedDeviceControl": {
            "type": "boolean"
          },
          "EnableRemoteAccess": {
            "type": "boolean"
          },
          "EnableLiveTvManagement": {
            "type": "boolean"
          },
          "EnableLiveTvAccess": {
            "type": "boolean"
          },
          "EnableMediaPlayback": {
            "type": "boolean"
          },
          "EnableAudioPlaybackTranscoding": {
            "type": "boolean"
          },
          "EnableVideoPlaybackTranscoding": {
            "type": "boolean"
          },
          "EnablePlaybackRemuxing": {
            "type": "boolean"
          },
          "ForceRemoteSourceTranscoding": {
            "type": "boolean"
          },
          "EnableContentDeletion": {
            "type": "boolean"
          },
          "EnableContentDeletionFromFolders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "EnableContentDownloading": {
            "type": "boolean"
          },
          "EnableSyncTranscoding": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether [enable synchronize]."
          },
          "EnableMediaConversion": {
            "type": "boolean"
          },
          "EnabledDevices": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "EnableAllDevices": {
            "type": "boolean"
          },
          "EnabledChannels": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "EnableAllChannels": {
            "type": "boolean"
          },
          "EnabledFolders": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "EnableAllFolders": {
            "type": "boolean"
          },
          "InvalidLoginAttemptCount": {
            "type": "integer",
            "format": "int32"
          },
          "LoginAttemptsBeforeLockout": {
            "type": "integer",
            "format": "int32"
          },
          "MaxActiveSessions": {
            "type": "integer",
            "format": "int32"
          },
          "EnablePublicSharing": {
            "type": "boolean"
          },
          "BlockedMediaFolders": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "BlockedChannels": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "nullable": true
          },
          "RemoteClientBitrateLimit": {
            "type": "integer",
            "format": "int32"
          },
          "AuthenticationProviderId": {
            "type": "string",
            "nullable": true
          },
          "PasswordResetProviderId": {
            "type": "string",
            "nullable": true
          },
          "SyncPlayAccess": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SyncPlayUserAccessType"
              }
            ],
            "description": "Gets or sets a value indicating what SyncPlay features the user can access."
          }
        },
        "additionalProperties": true
      },
      "UtcTimeResponse": {
        "type": "object",
        "properties": {
          "RequestReceptionTime": {
            "type": "string",
            "description": "Gets the UTC time when request has been received.",
            "format": "date-time"
          },
          "ResponseTransmissionTime": {
            "type": "string",
            "description": "Gets the UTC time when response has been sent.",
            "format": "date-time"
          }
        },
        "additionalProperties": true,
        "description": "Class UtcTimeResponse."
      },
      "ValidatePathDto": {
        "type": "object",
        "properties": {
          "ValidateWritable": {
            "type": "boolean",
            "description": "Gets or sets a value indicating whether validate if path is writable."
          },
          "Path": {
            "type": "string",
            "description": "Gets or sets the path.",
            "nullable": true
          },
          "IsFile": {
            "type": "boolean",
            "description": "Gets or sets is path file.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Validate path object."
      },
      "VersionInfo": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Gets or sets the version."
          },
          "VersionNumber": {
            "type": "string",
            "description": "Gets the version as a System.Version.",
            "readOnly": true
          },
          "changelog": {
            "type": "string",
            "description": "Gets or sets the changelog for this version.",
            "nullable": true
          },
          "targetAbi": {
            "type": "string",
            "description": "Gets or sets the ABI that this version was built against.",
            "nullable": true
          },
          "sourceUrl": {
            "type": "string",
            "description": "Gets or sets the source URL.",
            "nullable": true
          },
          "checksum": {
            "type": "string",
            "description": "Gets or sets a checksum for the binary.",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "description": "Gets or sets a timestamp of when the binary was built.",
            "nullable": true
          },
          "repositoryName": {
            "type": "string",
            "description": "Gets or sets the repository name."
          },
          "repositoryUrl": {
            "type": "string",
            "description": "Gets or sets the repository url."
          }
        },
        "additionalProperties": true,
        "description": "Defines the MediaBrowser.Model.Updates.VersionInfo class."
      },
      "Video3DFormat": {
        "enum": [
          "HalfSideBySide",
          "FullSideBySide",
          "FullTopAndBottom",
          "HalfTopAndBottom",
          "MVC"
        ],
        "type": "string"
      },
      "VideoType": {
        "enum": [
          "VideoFile",
          "Iso",
          "Dvd",
          "BluRay"
        ],
        "type": "string",
        "description": "Enum VideoType."
      },
      "VirtualFolderInfo": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name.",
            "nullable": true
          },
          "Locations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Gets or sets the locations.",
            "nullable": true
          },
          "CollectionType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/CollectionTypeOptions"
              }
            ],
            "description": "Gets or sets the type of the collection.",
            "nullable": true
          },
          "LibraryOptions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LibraryOptions"
              }
            ],
            "nullable": true
          },
          "ItemId": {
            "type": "string",
            "description": "Gets or sets the item identifier.",
            "nullable": true
          },
          "PrimaryImageItemId": {
            "type": "string",
            "description": "Gets or sets the primary image item identifier.",
            "nullable": true
          },
          "RefreshProgress": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "RefreshStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Used to hold information about a user's list of configured virtual folders."
      },
      "WakeOnLanInfo": {
        "type": "object",
        "properties": {
          "MacAddress": {
            "type": "string",
            "description": "Gets the MAC address of the device.",
            "nullable": true
          },
          "Port": {
            "type": "integer",
            "description": "Gets or sets the wake-on-LAN port.",
            "format": "int32"
          }
        },
        "additionalProperties": true,
        "description": "Provides the MAC address and port for wake-on-LAN functionality."
      },
      "XbmcMetadataOptions": {
        "type": "object",
        "properties": {
          "UserId": {
            "type": "string",
            "nullable": true
          },
          "ReleaseDateFormat": {
            "type": "string"
          },
          "SaveImagePathsInNfo": {
            "type": "boolean"
          },
          "EnablePathSubstitution": {
            "type": "boolean"
          },
          "EnableExtraThumbsDuplication": {
            "type": "boolean"
          }
        },
        "additionalProperties": true
      },
      "XmlAttribute": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Gets or sets the name of the attribute.",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "description": "Gets or sets the value of the attribute.",
            "nullable": true
          }
        },
        "additionalProperties": true,
        "description": "Defines the MediaBrowser.Model.Dlna.XmlAttribute."
      }
    },
    "securitySchemes": {
      "CustomAuthentication": {
        "type": "apiKey",
        "description": "API key header parameter",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
