name: CI
on:
  push:
    branches:
      - master
      - main
  pull_request:

env:
  RUST_TOOLCHAIN: stable
  TOOLCHAIN_PROFILE: minimal

jobs:
  rustfmt:
    name: Check Style
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
          components: rustfmt
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check --color always

  # TODO: Disabled for now as it doesn't match the nix env for some reason and I can't be fucked to make tiny changes and wait for CI to lint them...
  # clippy:
  #   name: Run Clippy
  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: read

  #   steps:
  #     - name: Checkout the code
  #       uses: actions/checkout@v4
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         profile: ${{ env.TOOLCHAIN_PROFILE }}
  #         toolchain: ${{ env.RUST_TOOLCHAIN }}
  #         override: true
  #     - name: Setup Rust cache
  #       uses: Swatinem/rust-cache@v2
  #     - name: Run cargo clippy
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: clippy
  #         args: --all-targets --all-features -- -D warnings

  deny-check:
    name: cargo-deny
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v1

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: ${{ env.TOOLCHAIN_PROFILE }}
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          override: true
      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Pull testcontainers
        timeout-minutes: 10
        run: |
          docker pull postgres:11-alpine
          docker pull redis:5.0
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --all
