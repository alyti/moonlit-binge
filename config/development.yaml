# Loco configuration file documentation

# Application logging configuration
logger:
  # Enable or disable logging.
  enable: true
  # Enable pretty backtrace (sets RUST_BACKTRACE=1)
  pretty_backtrace: true
  # Log level, options: trace, debug, info, warn or error.
  level: debug
  # Define the logging format. options: compact, pretty or json
  format: pretty
  # By default the logger has filtering only logs that came from your code or logs that came from `loco` framework. to see all third party libraries
  # Uncomment the line below to override to see all third party libraries you can enable this config and override the logger filters.
  # override_filter: trace

# Web server configuration
server:
  # Port on which the server will listen. the server binding is 0.0.0.0:{PORT}
  port: 5150
  # The UI hostname or IP address that mailers will point to.
  host: http://0.0.0.0
  # Out of the box middleware configuration. to disable middleware you can changed the `enable` field to `false` of comment the middleware block
  middlewares:
    # Enable Etag cache header middleware
    etag:
      enable: true
    # Allows to limit the payload size request. payload that bigger than this file will blocked the request.
    limit_payload:
      # Enable/Disable the middleware.
      enable: true
      # the limit size. can be b,kb,kib,mb,mib,gb,gib
      body_limit: 5mb
    # Generating a unique request ID and enhancing logging with additional information such as the start and completion of request processing, latency, status code, and other request details.
    logger:
      # Enable/Disable the middleware.
      enable: false
    # when your code is panicked, the request still returns 500 status code.
    catch_panic:
      # Enable/Disable the middleware.
      enable: true
    # Timeout for incoming requests middleware. requests that take more time from the configuration will cute and 408 status code will returned.
    timeout_request:
      # Enable/Disable the middleware.
      enable: false
      # Duration time in milliseconds.
      timeout: 5000
    cors:
      enable: true
      # Set the value of the [`Access-Control-Allow-Origin`][mdn] header
      # allow_origins:
      #   - https://loco.rs
      # Set the value of the [`Access-Control-Allow-Headers`][mdn] header
      # allow_headers:
      # - Content-Type
      # Set the value of the [`Access-Control-Allow-Methods`][mdn] header
      # allow_methods:
      #   - POST
      # Set the value of the [`Access-Control-Max-Age`][mdn] header in seconds
      # max_age: 3600

    # server-side static assets config
    # for use with the view_engine in initializers/view_engine.rs
    #
    static:
      enable: true
      must_exist: true
      precompressed: false
      folder:
        uri: "/static"
        path: "assets/static"
      fallback: "assets/static/404.html"

    # client side app static config
    # static:
    #   enable: true
    #   must_exist: true
    #   precompressed: false
    #   folder:
    #     uri: "/"
    #     path: "frontend/dist"
    #   fallback: "frontend/dist/index.html"

# Worker Configuration
workers:
  mode: BackgroundAsync

# Mailer Configuration.
mailer:
  # stub: true
  # SMTP mailer configuration.
  smtp:
    # Enable/Disable smtp mailer.
    enable: true
    # SMTP server host. e.x localhost, smtp.gmail.com
    host: {{ get_env(name="MAILER_HOST", default="localhost") }}
    # SMTP server port
    port: 1025
    # Use secure connection (SSL/TLS).
    secure: false
    # auth:
    #   user:
    #   password:

# Database Configuration
database:
  # Database connection URI
  uri: {{get_env(name="DATABASE_URL", default="postgres://loco:loco@localhost:5432/moonlit_binge_development")}}
  # When enabled, the sql query will be logged.
  enable_logging: true
  # Set the timeout duration when acquiring a connection.
  connect_timeout: 500
  # Set the idle duration before closing a connection.
  idle_timeout: 500
  # Minimum number of connections for a pool.
  min_connections: 10
  # Maximum number of connections for a pool.
  max_connections: 100
  # Run migration up when application loaded
  auto_migrate: true
  # Truncate database when application loaded. This is a dangerous operation, make sure that you using this flag only on dev environments or test mode
  dangerously_truncate: false
  # Recreating schema when application loaded.  This is a dangerous operation, make sure that you using this flag only on dev environments or test mode
  dangerously_recreate: false

# Authentication Configuration
auth:
  # JWT authentication
  jwt:
    # Secret key for token generation and verification
    secret: {{get_env(name="JWT_SECRET", default="changeme")}}
    # Token expiration time in seconds
    expiration: 604800 # 7 days
    location:
      from: Cookie
      name: moonlit_binge_jwt

settings:
  transcoding_dir: {{get_env(name="TRANSCODING_DIR", default=".transcodes")}}
  # See https://docs.rs/axum-client-ip/latest/axum_client_ip/enum.SecureClientIpSource.html for more options
  ip_source: {{get_env(name="IP_SOURCE", default="ConnectInfo")}}

initializers:
  media_providers: 
    - id: "alyti_jf"
      name: "Alyssa's Jellyfin"
      url: "https://jellyfin.alyti.dev"
      type: "jellyfin"
      # Dangerously allow custom profiles. This is a dangerous operation, since it doesn't validate the profile before passing it to the media server.
      # Custom profiles can be set in the web interface, and are executed as-is.
      dangerously_allow_custom_profiles: true
      exclude_library_ids:
        - 0679bd16-65cb-6513-4c09-c77234d26b9c
      profiles: 
        - name: "VRChat"
          description: "Media profile best suited for VRChat video player worlds"
          playback_settings:
            DeviceProfile:
              MaxStreamingBitrate: 120000000
              MaxStaticBitrate: 100000000
              MusicStreamingTranscodingBitrate: 384000
              DirectPlayProfiles:
              - Container: webm
                Type: Video
                VideoCodec: vp8,vp9,av1
                AudioCodec: vorbis,opus
              - Container: mp4,m4v
                Type: Video
                VideoCodec: h264,vp9,av1
                AudioCodec: aac,mp3,opus,flac,vorbis
              - Container: opus
                Type: Audio
              - Container: webm
                AudioCodec: opus
                Type: Audio
              - Container: mp3
                Type: Audio
              - Container: aac
                Type: Audio
              - Container: m4a
                AudioCodec: aac
                Type: Audio
              - Container: m4b
                AudioCodec: aac
                Type: Audio
              - Container: flac
                Type: Audio
              - Container: webma
                Type: Audio
              - Container: webm
                AudioCodec: webma
                Type: Audio
              - Container: wav
                Type: Audio
              - Container: ogg
                Type: Audio
              TranscodingProfiles:
              - Container: ts
                Type: Audio
                AudioCodec: aac
                Context: Streaming
                Protocol: hls
                MaxAudioChannels: '2'
                MinSegments: '1'
                BreakOnNonKeyFrames: true
              - Container: aac
                Type: Audio
                AudioCodec: aac
                Context: Streaming
                Protocol: http
                MaxAudioChannels: '2'
              - Container: mp3
                Type: Audio
                AudioCodec: mp3
                Context: Streaming
                Protocol: http
                MaxAudioChannels: '2'
              - Container: opus
                Type: Audio
                AudioCodec: opus
                Context: Streaming
                Protocol: http
                MaxAudioChannels: '2'
              - Container: wav
                Type: Audio
                AudioCodec: wav
                Context: Streaming
                Protocol: http
                MaxAudioChannels: '2'
              - Container: opus
                Type: Audio
                AudioCodec: opus
                Context: Static
                Protocol: http
                MaxAudioChannels: '2'
              - Container: mp3
                Type: Audio
                AudioCodec: mp3
                Context: Static
                Protocol: http
                MaxAudioChannels: '2'
              - Container: aac
                Type: Audio
                AudioCodec: aac
                Context: Static
                Protocol: http
                MaxAudioChannels: '2'
              - Container: wav
                Type: Audio
                AudioCodec: wav
                Context: Static
                Protocol: http
                MaxAudioChannels: '2'
              - Container: ts
                Type: Video
                AudioCodec: aac,mp3
                VideoCodec: h264
                Context: Streaming
                Protocol: hls
                MaxAudioChannels: '2'
                MinSegments: '1'
                BreakOnNonKeyFrames: true
              ContainerProfiles: []
              CodecProfiles:
              - Type: VideoAudio
                Codec: aac
                Conditions:
                - Condition: Equals
                  Property: IsSecondaryAudio
                  Value: 'false'
                  IsRequired: false
              - Type: VideoAudio
                Conditions:
                - Condition: Equals
                  Property: IsSecondaryAudio
                  Value: 'false'
                  IsRequired: false
              - Type: Video
                Codec: h264
                Conditions:
                - Condition: NotEquals
                  Property: IsAnamorphic
                  Value: 'true'
                  IsRequired: false
                - Condition: EqualsAny
                  Property: VideoProfile
                  Value: high|main|baseline|constrained baseline
                  IsRequired: false
                - Condition: EqualsAny
                  Property: VideoRangeType
                  Value: SDR
                  IsRequired: false
                - Condition: LessThanEqual
                  Property: VideoLevel
                  Value: '52'
                  IsRequired: false
                - Condition: NotEquals
                  Property: IsInterlaced
                  Value: 'true'
                  IsRequired: false
              - Type: Video
                Codec: hevc
                Conditions:
                - Condition: NotEquals
                  Property: IsAnamorphic
                  Value: 'true'
                  IsRequired: false
                - Condition: EqualsAny
                  Property: VideoProfile
                  Value: main
                  IsRequired: false
                - Condition: EqualsAny
                  Property: VideoRangeType
                  Value: SDR
                  IsRequired: false
                - Condition: LessThanEqual
                  Property: VideoLevel
                  Value: '120'
                  IsRequired: false
                - Condition: NotEquals
                  Property: IsInterlaced
                  Value: 'true'
                  IsRequired: false
              - Type: Video
                Codec: vp9
                Conditions:
                - Condition: EqualsAny
                  Property: VideoRangeType
                  Value: SDR|HDR10|HLG
                  IsRequired: false
              - Type: Video
                Codec: av1
                Conditions:
                - Condition: EqualsAny
                  Property: VideoRangeType
                  Value: SDR|HDR10|HLG
                  IsRequired: false
              SubtitleProfiles: []
              # - Format: vtt
              #   Method: External
              # - Format: ass
              #   Method: External
              # - Format: ssa
              #   Method: External
              ResponseProfiles:
              - Type: Video
                Container: m4v
                MimeType: video/mp4
